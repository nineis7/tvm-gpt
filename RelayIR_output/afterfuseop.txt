type List[A] {
  Cons(A, List[A]),
  Nil,
}

type Option[A] {
  Some(A),
  None,
}

type Tree[A] {
  Rose(A, List[Tree[A]]),
}

type tensor_float16_t {
  tensor_nil_float16,
  tensor0_float16(float16),
  tensor1_float16(Tensor[(?), float16]),
  tensor2_float16(Tensor[(?, ?), float16]),
  tensor3_float16(Tensor[(?, ?, ?), float16]),
  tensor4_float16(Tensor[(?, ?, ?, ?), float16]),
  tensor5_float16(Tensor[(?, ?, ?, ?, ?), float16]),
  tensor6_float16(Tensor[(?, ?, ?, ?, ?, ?), float16]),
}

type tensor_float32_t {
  tensor_nil_float32,
  tensor0_float32(float32),
  tensor1_float32(Tensor[(?), float32]),
  tensor2_float32(Tensor[(?, ?), float32]),
  tensor3_float32(Tensor[(?, ?, ?), float32]),
  tensor4_float32(Tensor[(?, ?, ?, ?), float32]),
  tensor5_float32(Tensor[(?, ?, ?, ?, ?), float32]),
  tensor6_float32(Tensor[(?, ?, ?, ?, ?, ?), float32]),
}

type tensor_float64_t {
  tensor_nil_float64,
  tensor0_float64(float64),
  tensor1_float64(Tensor[(?), float64]),
  tensor2_float64(Tensor[(?, ?), float64]),
  tensor3_float64(Tensor[(?, ?, ?), float64]),
  tensor4_float64(Tensor[(?, ?, ?, ?), float64]),
  tensor5_float64(Tensor[(?, ?, ?, ?, ?), float64]),
  tensor6_float64(Tensor[(?, ?, ?, ?, ?, ?), float64]),
}

type tensor_int16_t {
  tensor_nil_int16,
  tensor0_int16(int16),
  tensor1_int16(Tensor[(?), int16]),
  tensor2_int16(Tensor[(?, ?), int16]),
  tensor3_int16(Tensor[(?, ?, ?), int16]),
  tensor4_int16(Tensor[(?, ?, ?, ?), int16]),
  tensor5_int16(Tensor[(?, ?, ?, ?, ?), int16]),
  tensor6_int16(Tensor[(?, ?, ?, ?, ?, ?), int16]),
}

type tensor_int32_t {
  tensor_nil_int32,
  tensor0_int32(int32),
  tensor1_int32(Tensor[(?), int32]),
  tensor2_int32(Tensor[(?, ?), int32]),
  tensor3_int32(Tensor[(?, ?, ?), int32]),
  tensor4_int32(Tensor[(?, ?, ?, ?), int32]),
  tensor5_int32(Tensor[(?, ?, ?, ?, ?), int32]),
  tensor6_int32(Tensor[(?, ?, ?, ?, ?, ?), int32]),
}

type tensor_int64_t {
  tensor_nil_int64,
  tensor0_int64(int64),
  tensor1_int64(Tensor[(?), int64]),
  tensor2_int64(Tensor[(?, ?), int64]),
  tensor3_int64(Tensor[(?, ?, ?), int64]),
  tensor4_int64(Tensor[(?, ?, ?, ?), int64]),
  tensor5_int64(Tensor[(?, ?, ?, ?, ?), int64]),
  tensor6_int64(Tensor[(?, ?, ?, ?, ?, ?), int64]),
}

type tensor_int8_t {
  tensor_nil_int8,
  tensor0_int8(int8),
  tensor1_int8(Tensor[(?), int8]),
  tensor2_int8(Tensor[(?, ?), int8]),
  tensor3_int8(Tensor[(?, ?, ?), int8]),
  tensor4_int8(Tensor[(?, ?, ?, ?), int8]),
  tensor5_int8(Tensor[(?, ?, ?, ?, ?), int8]),
  tensor6_int8(Tensor[(?, ?, ?, ?, ?, ?), int8]),
}

type tensor_uint16_t {
  tensor_nil_uint16,
  tensor0_uint16(uint16),
  tensor1_uint16(Tensor[(?), uint16]),
  tensor2_uint16(Tensor[(?, ?), uint16]),
  tensor3_uint16(Tensor[(?, ?, ?), uint16]),
  tensor4_uint16(Tensor[(?, ?, ?, ?), uint16]),
  tensor5_uint16(Tensor[(?, ?, ?, ?, ?), uint16]),
  tensor6_uint16(Tensor[(?, ?, ?, ?, ?, ?), uint16]),
}

type tensor_uint8_t {
  tensor_nil_uint8,
  tensor0_uint8(uint8),
  tensor1_uint8(Tensor[(?), uint8]),
  tensor2_uint8(Tensor[(?, ?), uint8]),
  tensor3_uint8(Tensor[(?, ?, ?), uint8]),
  tensor4_uint8(Tensor[(?, ?, ?, ?), uint8]),
  tensor5_uint8(Tensor[(?, ?, ?, ?, ?), uint8]),
  tensor6_uint8(Tensor[(?, ?, ?, ?, ?, ?), uint8]),
}

def @main(%idx: Tensor[(1, 128), int64] /* ty=Tensor[(1, 128), int64] */) -> Tensor[(1, 128, 128), float16] {
  %600 = fn (%p0219: Tensor[(1, 128), int64] /* ty=Tensor[(1, 128), int64] */, %p1158: Tensor[(128, 768), float16] /* ty=Tensor[(128, 768), float16] */, %p273: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %598 = cast(%p0219, dtype="int32") /* ty=Tensor[(1, 128), int32] */;
    %599 = take(%p1158, %598, axis=0) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%599, %p273) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128), int64], Tensor[(128, 768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %601 = %600(%idx, meta[relay.Constant][0] /* ty=Tensor[(128, 768), float16] */, meta[relay.Constant][1] /* ty=Tensor[(1, 128, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %602 = fn (%p0218: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0218, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %603 = %602(%601) /* ty=Tensor[(1, 128, 768), float32] */;
  %604 = fn (%p0220: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0220, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %605 = %604(%603) /* ty=Tensor[(1, 128, 1), float32] */;
  %606 = fn (%p0221: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1159: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0221, %p1159, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %607 = %606(%603, %605) /* ty=Tensor[(1, 128, 1), float32] */;
  %608 = fn (%p0217: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1157: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p272: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p336: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p424: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %590 = add(%p272, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %591 = subtract(%p0217, %p1157) /* ty=Tensor[(1, 128, 768), float32] */;
    %592 = sqrt(%590) /* ty=Tensor[(1, 128, 1), float32] */;
    %593 = divide(%591, %592) /* ty=Tensor[(1, 128, 768), float32] */;
    %594 = multiply(%593, %p336) /* ty=Tensor[(1, 128, 768), float32] */;
    %595 = add(%594, %p424) /* ty=Tensor[(1, 128, 768), float32] */;
    %596 = broadcast_to(%595, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %597 = reshape(%596, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%597, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %609 = %608(%603, %605, %607, meta[relay.Constant][2] /* ty=Tensor[(768), float32] */, meta[relay.Constant][3] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %610 = fn (%p0216: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1156: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0216, %p1156, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %611 = %610(%609, meta[relay.Constant][4] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %612 = fn (%p0215: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1155: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %584 = reshape(%p0215, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %585 = squeeze(%584, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %586 = add(%585, %p1155) /* ty=Tensor[(1, 128, 768), float16] */;
    %587 = reshape(%586, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %588 = transpose(%587, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %589 = broadcast_to(%588, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%589, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %620 = fn (%p0223: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1161: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0223, %p1161, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %621 = %620(%609, meta[relay.Constant][6] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %622 = fn (%p0222: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1160: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %613 = reshape(%p0222, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %614 = squeeze(%613, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %615 = add(%614, %p1160) /* ty=Tensor[(1, 128, 768), float16] */;
    %616 = reshape(%615, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %617 = transpose(%616, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %618 = transpose(%617, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %619 = broadcast_to(%618, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%619, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %623 = %612(%611, meta[relay.Constant][5] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %624 = %622(%621, meta[relay.Constant][7] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %625 = fn (%p0214: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p1154: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p0214, %p1154, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %626 = %625(%623, %624) /* ty=Tensor[(12, 128, 128), float16] */;
  %627 = fn (%p0213: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1153: float16 /* ty=float16 */, %p271: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p335: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %581 = reshape(%p0213, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %582 = squeeze(%581, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %583 = multiply(%582, %p1153) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p271, %p335, %583) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %628 = %627(%626, 0.125f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %629 = fn (%p0212: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %580 = nn.softmax(%p0212) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%580, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %630 = %629(%628) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %631 = fn (%p0211: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p0211, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %638 = fn (%p0225: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1163: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0225, %p1163, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %639 = %638(%609, meta[relay.Constant][9] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %640 = fn (%p0224: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1162: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %632 = reshape(%p0224, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %633 = squeeze(%632, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %634 = add(%633, %p1162) /* ty=Tensor[(1, 128, 768), float16] */;
    %635 = reshape(%634, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %636 = transpose(%635, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %637 = broadcast_to(%636, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%637, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %641 = %631(%630) /* ty=Tensor[(12, 128, 128), float16] */;
  %642 = %640(%639, meta[relay.Constant][10] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %643 = fn (%p0210: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1152: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p0210, %p1152, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %644 = %643(%641, %642) /* ty=Tensor[(12, 128, 64), float16] */;
  %645 = fn (%p0209: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %575 = reshape(%p0209, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %576 = squeeze(%575, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %577 = transpose(%576, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %578 = reshape(%577, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %579 = broadcast_to(%578, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%579, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %646 = %645(%644) /* ty=Tensor[(1, 128, 768), float16] */;
  %647 = fn (%p0208: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1151: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0208, %p1151, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %648 = %647(%646, meta[relay.Constant][11] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %649 = fn (%p0207: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1150: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p270: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %572 = reshape(%p0207, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %573 = squeeze(%572, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %574 = add(%573, %p1150) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p270, %574) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %650 = %649(%648, meta[relay.Constant][12] /* ty=Tensor[(768), float16] */, %601) /* ty=Tensor[(1, 128, 768), float16] */;
  %651 = fn (%p0206: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0206, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %652 = %651(%650) /* ty=Tensor[(1, 128, 768), float32] */;
  %653 = fn (%p0226: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0226, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %654 = %653(%652) /* ty=Tensor[(1, 128, 1), float32] */;
  %655 = fn (%p0227: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1164: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0227, %p1164, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %656 = %655(%652, %654) /* ty=Tensor[(1, 128, 1), float32] */;
  %657 = fn (%p0205: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1149: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p269: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p334: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p423: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %564 = add(%p269, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %565 = subtract(%p0205, %p1149) /* ty=Tensor[(1, 128, 768), float32] */;
    %566 = sqrt(%564) /* ty=Tensor[(1, 128, 1), float32] */;
    %567 = divide(%565, %566) /* ty=Tensor[(1, 128, 768), float32] */;
    %568 = multiply(%567, %p334) /* ty=Tensor[(1, 128, 768), float32] */;
    %569 = add(%568, %p423) /* ty=Tensor[(1, 128, 768), float32] */;
    %570 = broadcast_to(%569, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %571 = reshape(%570, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%571, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %658 = %657(%652, %654, %656, meta[relay.Constant][13] /* ty=Tensor[(768), float32] */, meta[relay.Constant][14] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %659 = fn (%p0204: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1148: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p0204, %p1148, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %660 = %659(%658, meta[relay.Constant][15] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %661 = fn (%p0203: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p1147: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p268: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %552 = reshape(%p0203, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %553 = squeeze(%552, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %554 = add(%553, %p1147) /* ty=Tensor[(1, 128, 3072), float16] */;
    %555 = multiply(%554, %p268) /* ty=Tensor[(1, 128, 3072), float16] */;
    %556 = cast(%555, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %557 = erf(%556) /* ty=Tensor[(1, 128, 3072), float32] */;
    %558 = multiply(%557, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 3072), float32] */;
    %559 = cast(%554, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %560 = add(0.5f /* ty=float32 */, %558) /* ty=Tensor[(1, 128, 3072), float32] */;
    %561 = multiply(%559, %560) /* ty=Tensor[(1, 128, 3072), float32] */;
    %562 = broadcast_to(%561, shape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    %563 = reshape(%562, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    cast(%563, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16) -> Tensor[(1, 128, 3072), float16] */;
  %662 = %661(%660, meta[relay.Constant][16] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %663 = fn (%p0202: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p1146: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0202, %p1146, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %664 = %663(%662, meta[relay.Constant][17] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %665 = fn (%p0201: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1145: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p267: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %549 = reshape(%p0201, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %550 = squeeze(%549, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %551 = add(%550, %p1145) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p267, %551) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %666 = %665(%664, meta[relay.Constant][18] /* ty=Tensor[(768), float16] */, %650) /* ty=Tensor[(1, 128, 768), float16] */;
  %667 = fn (%p0200: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0200, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %668 = %667(%666) /* ty=Tensor[(1, 128, 768), float32] */;
  %669 = fn (%p0228: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0228, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %670 = %669(%668) /* ty=Tensor[(1, 128, 1), float32] */;
  %671 = fn (%p0229: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1165: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0229, %p1165, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %672 = %671(%668, %670) /* ty=Tensor[(1, 128, 1), float32] */;
  %673 = fn (%p0199: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1144: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p266: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p333: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p422: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %541 = add(%p266, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %542 = subtract(%p0199, %p1144) /* ty=Tensor[(1, 128, 768), float32] */;
    %543 = sqrt(%541) /* ty=Tensor[(1, 128, 1), float32] */;
    %544 = divide(%542, %543) /* ty=Tensor[(1, 128, 768), float32] */;
    %545 = multiply(%544, %p333) /* ty=Tensor[(1, 128, 768), float32] */;
    %546 = add(%545, %p422) /* ty=Tensor[(1, 128, 768), float32] */;
    %547 = broadcast_to(%546, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %548 = reshape(%547, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%548, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %674 = %673(%668, %670, %672, meta[relay.Constant][19] /* ty=Tensor[(768), float32] */, meta[relay.Constant][20] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %675 = fn (%p0198: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1143: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0198, %p1143, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %676 = %675(%674, meta[relay.Constant][21] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %677 = fn (%p0197: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1142: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %535 = reshape(%p0197, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %536 = squeeze(%535, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %537 = add(%536, %p1142) /* ty=Tensor[(1, 128, 768), float16] */;
    %538 = reshape(%537, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %539 = transpose(%538, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %540 = broadcast_to(%539, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%540, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %685 = fn (%p0231: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1167: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0231, %p1167, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %686 = %685(%674, meta[relay.Constant][23] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %687 = fn (%p0230: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1166: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %678 = reshape(%p0230, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %679 = squeeze(%678, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %680 = add(%679, %p1166) /* ty=Tensor[(1, 128, 768), float16] */;
    %681 = reshape(%680, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %682 = transpose(%681, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %683 = transpose(%682, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %684 = broadcast_to(%683, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%684, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %688 = %677(%676, meta[relay.Constant][22] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %689 = %687(%686, meta[relay.Constant][24] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %690 = fn (%p0196: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p1141: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p0196, %p1141, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %691 = %690(%688, %689) /* ty=Tensor[(12, 128, 128), float16] */;
  %692 = fn (%p0195: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1140: float16 /* ty=float16 */, %p265: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p332: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %532 = reshape(%p0195, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %533 = squeeze(%532, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %534 = multiply(%533, %p1140) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p265, %p332, %534) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %693 = %692(%691, 0.125f16 /* ty=float16 */, meta[relay.Constant][25] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %694 = fn (%p0194: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %531 = nn.softmax(%p0194) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%531, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %695 = %694(%693) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %696 = fn (%p0193: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p0193, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %703 = fn (%p0233: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1169: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0233, %p1169, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %704 = %703(%674, meta[relay.Constant][26] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %705 = fn (%p0232: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1168: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %697 = reshape(%p0232, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %698 = squeeze(%697, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %699 = add(%698, %p1168) /* ty=Tensor[(1, 128, 768), float16] */;
    %700 = reshape(%699, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %701 = transpose(%700, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %702 = broadcast_to(%701, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%702, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %706 = %696(%695) /* ty=Tensor[(12, 128, 128), float16] */;
  %707 = %705(%704, meta[relay.Constant][27] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %708 = fn (%p0192: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1139: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p0192, %p1139, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %709 = %708(%706, %707) /* ty=Tensor[(12, 128, 64), float16] */;
  %710 = fn (%p0191: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %526 = reshape(%p0191, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %527 = squeeze(%526, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %528 = transpose(%527, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %529 = reshape(%528, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %530 = broadcast_to(%529, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%530, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %711 = %710(%709) /* ty=Tensor[(1, 128, 768), float16] */;
  %712 = fn (%p0190: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1138: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0190, %p1138, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %713 = %712(%711, meta[relay.Constant][28] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %714 = fn (%p0189: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1137: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p264: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %523 = reshape(%p0189, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %524 = squeeze(%523, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %525 = add(%524, %p1137) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p264, %525) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %715 = %714(%713, meta[relay.Constant][29] /* ty=Tensor[(768), float16] */, %666) /* ty=Tensor[(1, 128, 768), float16] */;
  %716 = fn (%p0188: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0188, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %717 = %716(%715) /* ty=Tensor[(1, 128, 768), float32] */;
  %718 = fn (%p0234: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0234, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %719 = %718(%717) /* ty=Tensor[(1, 128, 1), float32] */;
  %720 = fn (%p0235: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1170: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0235, %p1170, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %721 = %720(%717, %719) /* ty=Tensor[(1, 128, 1), float32] */;
  %722 = fn (%p0187: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1136: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p263: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p331: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p421: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %515 = add(%p263, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %516 = subtract(%p0187, %p1136) /* ty=Tensor[(1, 128, 768), float32] */;
    %517 = sqrt(%515) /* ty=Tensor[(1, 128, 1), float32] */;
    %518 = divide(%516, %517) /* ty=Tensor[(1, 128, 768), float32] */;
    %519 = multiply(%518, %p331) /* ty=Tensor[(1, 128, 768), float32] */;
    %520 = add(%519, %p421) /* ty=Tensor[(1, 128, 768), float32] */;
    %521 = broadcast_to(%520, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %522 = reshape(%521, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%522, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %723 = %722(%717, %719, %721, meta[relay.Constant][30] /* ty=Tensor[(768), float32] */, meta[relay.Constant][31] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %724 = fn (%p0186: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1135: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p0186, %p1135, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %725 = %724(%723, meta[relay.Constant][32] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %726 = fn (%p0185: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p1134: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p262: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %503 = reshape(%p0185, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %504 = squeeze(%503, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %505 = add(%504, %p1134) /* ty=Tensor[(1, 128, 3072), float16] */;
    %506 = multiply(%505, %p262) /* ty=Tensor[(1, 128, 3072), float16] */;
    %507 = cast(%506, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %508 = erf(%507) /* ty=Tensor[(1, 128, 3072), float32] */;
    %509 = multiply(%508, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 3072), float32] */;
    %510 = cast(%505, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %511 = add(0.5f /* ty=float32 */, %509) /* ty=Tensor[(1, 128, 3072), float32] */;
    %512 = multiply(%510, %511) /* ty=Tensor[(1, 128, 3072), float32] */;
    %513 = broadcast_to(%512, shape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    %514 = reshape(%513, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    cast(%514, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16) -> Tensor[(1, 128, 3072), float16] */;
  %727 = %726(%725, meta[relay.Constant][33] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %728 = fn (%p0184: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p1133: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0184, %p1133, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %729 = %728(%727, meta[relay.Constant][34] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %730 = fn (%p0183: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1132: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p261: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %500 = reshape(%p0183, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %501 = squeeze(%500, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %502 = add(%501, %p1132) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p261, %502) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %731 = %730(%729, meta[relay.Constant][35] /* ty=Tensor[(768), float16] */, %715) /* ty=Tensor[(1, 128, 768), float16] */;
  %732 = fn (%p0182: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0182, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %733 = %732(%731) /* ty=Tensor[(1, 128, 768), float32] */;
  %734 = fn (%p0236: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0236, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %735 = %734(%733) /* ty=Tensor[(1, 128, 1), float32] */;
  %736 = fn (%p0237: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1171: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0237, %p1171, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %737 = %736(%733, %735) /* ty=Tensor[(1, 128, 1), float32] */;
  %738 = fn (%p0181: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1131: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p260: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p330: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p420: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %492 = add(%p260, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %493 = subtract(%p0181, %p1131) /* ty=Tensor[(1, 128, 768), float32] */;
    %494 = sqrt(%492) /* ty=Tensor[(1, 128, 1), float32] */;
    %495 = divide(%493, %494) /* ty=Tensor[(1, 128, 768), float32] */;
    %496 = multiply(%495, %p330) /* ty=Tensor[(1, 128, 768), float32] */;
    %497 = add(%496, %p420) /* ty=Tensor[(1, 128, 768), float32] */;
    %498 = broadcast_to(%497, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %499 = reshape(%498, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%499, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %739 = %738(%733, %735, %737, meta[relay.Constant][36] /* ty=Tensor[(768), float32] */, meta[relay.Constant][37] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %740 = fn (%p0180: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1130: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0180, %p1130, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %741 = %740(%739, meta[relay.Constant][38] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %742 = fn (%p0179: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1129: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %486 = reshape(%p0179, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %487 = squeeze(%486, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %488 = add(%487, %p1129) /* ty=Tensor[(1, 128, 768), float16] */;
    %489 = reshape(%488, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %490 = transpose(%489, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %491 = broadcast_to(%490, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%491, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %750 = fn (%p0239: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1173: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0239, %p1173, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %751 = %750(%739, meta[relay.Constant][40] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %752 = fn (%p0238: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1172: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %743 = reshape(%p0238, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %744 = squeeze(%743, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %745 = add(%744, %p1172) /* ty=Tensor[(1, 128, 768), float16] */;
    %746 = reshape(%745, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %747 = transpose(%746, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %748 = transpose(%747, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %749 = broadcast_to(%748, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%749, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %753 = %742(%741, meta[relay.Constant][39] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %754 = %752(%751, meta[relay.Constant][41] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %755 = fn (%p0178: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p1128: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p0178, %p1128, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %756 = %755(%753, %754) /* ty=Tensor[(12, 128, 128), float16] */;
  %757 = fn (%p0177: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1127: float16 /* ty=float16 */, %p259: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p329: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %483 = reshape(%p0177, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %484 = squeeze(%483, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %485 = multiply(%484, %p1127) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p259, %p329, %485) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %758 = %757(%756, 0.125f16 /* ty=float16 */, meta[relay.Constant][42] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %759 = fn (%p0176: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %482 = nn.softmax(%p0176) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%482, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %760 = %759(%758) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %761 = fn (%p0175: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p0175, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %768 = fn (%p0241: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1175: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0241, %p1175, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %769 = %768(%739, meta[relay.Constant][43] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %770 = fn (%p0240: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1174: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %762 = reshape(%p0240, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %763 = squeeze(%762, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %764 = add(%763, %p1174) /* ty=Tensor[(1, 128, 768), float16] */;
    %765 = reshape(%764, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %766 = transpose(%765, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %767 = broadcast_to(%766, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%767, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %771 = %761(%760) /* ty=Tensor[(12, 128, 128), float16] */;
  %772 = %770(%769, meta[relay.Constant][44] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %773 = fn (%p0174: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1126: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p0174, %p1126, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %774 = %773(%771, %772) /* ty=Tensor[(12, 128, 64), float16] */;
  %775 = fn (%p0173: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %477 = reshape(%p0173, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %478 = squeeze(%477, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %479 = transpose(%478, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %480 = reshape(%479, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %481 = broadcast_to(%480, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%481, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %776 = %775(%774) /* ty=Tensor[(1, 128, 768), float16] */;
  %777 = fn (%p0172: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1125: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0172, %p1125, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %778 = %777(%776, meta[relay.Constant][45] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %779 = fn (%p0171: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1124: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p258: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %474 = reshape(%p0171, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %475 = squeeze(%474, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %476 = add(%475, %p1124) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p258, %476) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %780 = %779(%778, meta[relay.Constant][46] /* ty=Tensor[(768), float16] */, %731) /* ty=Tensor[(1, 128, 768), float16] */;
  %781 = fn (%p0170: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0170, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %782 = %781(%780) /* ty=Tensor[(1, 128, 768), float32] */;
  %783 = fn (%p0242: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0242, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %784 = %783(%782) /* ty=Tensor[(1, 128, 1), float32] */;
  %785 = fn (%p0243: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1176: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0243, %p1176, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %786 = %785(%782, %784) /* ty=Tensor[(1, 128, 1), float32] */;
  %787 = fn (%p0169: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1123: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p257: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p328: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p419: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %466 = add(%p257, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %467 = subtract(%p0169, %p1123) /* ty=Tensor[(1, 128, 768), float32] */;
    %468 = sqrt(%466) /* ty=Tensor[(1, 128, 1), float32] */;
    %469 = divide(%467, %468) /* ty=Tensor[(1, 128, 768), float32] */;
    %470 = multiply(%469, %p328) /* ty=Tensor[(1, 128, 768), float32] */;
    %471 = add(%470, %p419) /* ty=Tensor[(1, 128, 768), float32] */;
    %472 = broadcast_to(%471, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %473 = reshape(%472, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%473, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %788 = %787(%782, %784, %786, meta[relay.Constant][47] /* ty=Tensor[(768), float32] */, meta[relay.Constant][48] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %789 = fn (%p0168: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1122: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p0168, %p1122, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %790 = %789(%788, meta[relay.Constant][49] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %791 = fn (%p0167: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p1121: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p256: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %454 = reshape(%p0167, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %455 = squeeze(%454, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %456 = add(%455, %p1121) /* ty=Tensor[(1, 128, 3072), float16] */;
    %457 = multiply(%456, %p256) /* ty=Tensor[(1, 128, 3072), float16] */;
    %458 = cast(%457, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %459 = erf(%458) /* ty=Tensor[(1, 128, 3072), float32] */;
    %460 = multiply(%459, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 3072), float32] */;
    %461 = cast(%456, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %462 = add(0.5f /* ty=float32 */, %460) /* ty=Tensor[(1, 128, 3072), float32] */;
    %463 = multiply(%461, %462) /* ty=Tensor[(1, 128, 3072), float32] */;
    %464 = broadcast_to(%463, shape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    %465 = reshape(%464, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    cast(%465, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16) -> Tensor[(1, 128, 3072), float16] */;
  %792 = %791(%790, meta[relay.Constant][50] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %793 = fn (%p0166: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p1120: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0166, %p1120, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %794 = %793(%792, meta[relay.Constant][51] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %795 = fn (%p0165: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1119: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p255: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %451 = reshape(%p0165, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %452 = squeeze(%451, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %453 = add(%452, %p1119) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p255, %453) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %796 = %795(%794, meta[relay.Constant][52] /* ty=Tensor[(768), float16] */, %780) /* ty=Tensor[(1, 128, 768), float16] */;
  %797 = fn (%p0164: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0164, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %798 = %797(%796) /* ty=Tensor[(1, 128, 768), float32] */;
  %799 = fn (%p0244: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0244, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %800 = %799(%798) /* ty=Tensor[(1, 128, 1), float32] */;
  %801 = fn (%p0245: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1177: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0245, %p1177, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %802 = %801(%798, %800) /* ty=Tensor[(1, 128, 1), float32] */;
  %803 = fn (%p0163: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1118: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p254: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p327: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p418: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %443 = add(%p254, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %444 = subtract(%p0163, %p1118) /* ty=Tensor[(1, 128, 768), float32] */;
    %445 = sqrt(%443) /* ty=Tensor[(1, 128, 1), float32] */;
    %446 = divide(%444, %445) /* ty=Tensor[(1, 128, 768), float32] */;
    %447 = multiply(%446, %p327) /* ty=Tensor[(1, 128, 768), float32] */;
    %448 = add(%447, %p418) /* ty=Tensor[(1, 128, 768), float32] */;
    %449 = broadcast_to(%448, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %450 = reshape(%449, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%450, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %804 = %803(%798, %800, %802, meta[relay.Constant][53] /* ty=Tensor[(768), float32] */, meta[relay.Constant][54] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %805 = fn (%p0162: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1117: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0162, %p1117, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %806 = %805(%804, meta[relay.Constant][55] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %807 = fn (%p0161: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1116: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %437 = reshape(%p0161, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %438 = squeeze(%437, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %439 = add(%438, %p1116) /* ty=Tensor[(1, 128, 768), float16] */;
    %440 = reshape(%439, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %441 = transpose(%440, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %442 = broadcast_to(%441, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%442, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %815 = fn (%p0247: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1179: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0247, %p1179, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %816 = %815(%804, meta[relay.Constant][57] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %817 = fn (%p0246: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1178: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %808 = reshape(%p0246, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %809 = squeeze(%808, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %810 = add(%809, %p1178) /* ty=Tensor[(1, 128, 768), float16] */;
    %811 = reshape(%810, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %812 = transpose(%811, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %813 = transpose(%812, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %814 = broadcast_to(%813, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%814, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %818 = %807(%806, meta[relay.Constant][56] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %819 = %817(%816, meta[relay.Constant][58] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %820 = fn (%p0160: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p1115: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p0160, %p1115, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %821 = %820(%818, %819) /* ty=Tensor[(12, 128, 128), float16] */;
  %822 = fn (%p0159: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1114: float16 /* ty=float16 */, %p253: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p326: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %434 = reshape(%p0159, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %435 = squeeze(%434, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %436 = multiply(%435, %p1114) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p253, %p326, %436) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %823 = %822(%821, 0.125f16 /* ty=float16 */, meta[relay.Constant][59] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %824 = fn (%p0158: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %433 = nn.softmax(%p0158) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%433, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %825 = %824(%823) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %826 = fn (%p0157: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p0157, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %833 = fn (%p0249: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1181: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0249, %p1181, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %834 = %833(%804, meta[relay.Constant][60] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %835 = fn (%p0248: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1180: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %827 = reshape(%p0248, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %828 = squeeze(%827, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %829 = add(%828, %p1180) /* ty=Tensor[(1, 128, 768), float16] */;
    %830 = reshape(%829, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %831 = transpose(%830, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %832 = broadcast_to(%831, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%832, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %836 = %826(%825) /* ty=Tensor[(12, 128, 128), float16] */;
  %837 = %835(%834, meta[relay.Constant][61] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %838 = fn (%p0156: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1113: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p0156, %p1113, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %839 = %838(%836, %837) /* ty=Tensor[(12, 128, 64), float16] */;
  %840 = fn (%p0155: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %428 = reshape(%p0155, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %429 = squeeze(%428, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %430 = transpose(%429, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %431 = reshape(%430, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %432 = broadcast_to(%431, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%432, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %841 = %840(%839) /* ty=Tensor[(1, 128, 768), float16] */;
  %842 = fn (%p0154: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1112: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0154, %p1112, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %843 = %842(%841, meta[relay.Constant][62] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %844 = fn (%p0153: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1111: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p252: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %425 = reshape(%p0153, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %426 = squeeze(%425, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %427 = add(%426, %p1111) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p252, %427) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %845 = %844(%843, meta[relay.Constant][63] /* ty=Tensor[(768), float16] */, %796) /* ty=Tensor[(1, 128, 768), float16] */;
  %846 = fn (%p0152: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0152, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %847 = %846(%845) /* ty=Tensor[(1, 128, 768), float32] */;
  %848 = fn (%p0250: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0250, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %849 = %848(%847) /* ty=Tensor[(1, 128, 1), float32] */;
  %850 = fn (%p0251: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1182: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0251, %p1182, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %851 = %850(%847, %849) /* ty=Tensor[(1, 128, 1), float32] */;
  %852 = fn (%p0151: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1110: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p251: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p325: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p417: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %417 = add(%p251, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %418 = subtract(%p0151, %p1110) /* ty=Tensor[(1, 128, 768), float32] */;
    %419 = sqrt(%417) /* ty=Tensor[(1, 128, 1), float32] */;
    %420 = divide(%418, %419) /* ty=Tensor[(1, 128, 768), float32] */;
    %421 = multiply(%420, %p325) /* ty=Tensor[(1, 128, 768), float32] */;
    %422 = add(%421, %p417) /* ty=Tensor[(1, 128, 768), float32] */;
    %423 = broadcast_to(%422, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %424 = reshape(%423, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%424, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %853 = %852(%847, %849, %851, meta[relay.Constant][64] /* ty=Tensor[(768), float32] */, meta[relay.Constant][65] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %854 = fn (%p0150: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1109: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p0150, %p1109, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %855 = %854(%853, meta[relay.Constant][66] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %856 = fn (%p0149: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p1108: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p250: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %405 = reshape(%p0149, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %406 = squeeze(%405, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %407 = add(%406, %p1108) /* ty=Tensor[(1, 128, 3072), float16] */;
    %408 = multiply(%407, %p250) /* ty=Tensor[(1, 128, 3072), float16] */;
    %409 = cast(%408, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %410 = erf(%409) /* ty=Tensor[(1, 128, 3072), float32] */;
    %411 = multiply(%410, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 3072), float32] */;
    %412 = cast(%407, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %413 = add(0.5f /* ty=float32 */, %411) /* ty=Tensor[(1, 128, 3072), float32] */;
    %414 = multiply(%412, %413) /* ty=Tensor[(1, 128, 3072), float32] */;
    %415 = broadcast_to(%414, shape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    %416 = reshape(%415, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    cast(%416, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16) -> Tensor[(1, 128, 3072), float16] */;
  %857 = %856(%855, meta[relay.Constant][67] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %858 = fn (%p0148: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p1107: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0148, %p1107, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %859 = %858(%857, meta[relay.Constant][68] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %860 = fn (%p0147: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1106: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p249: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %402 = reshape(%p0147, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %403 = squeeze(%402, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %404 = add(%403, %p1106) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p249, %404) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %861 = %860(%859, meta[relay.Constant][69] /* ty=Tensor[(768), float16] */, %845) /* ty=Tensor[(1, 128, 768), float16] */;
  %862 = fn (%p0146: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0146, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %863 = %862(%861) /* ty=Tensor[(1, 128, 768), float32] */;
  %864 = fn (%p0252: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0252, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %865 = %864(%863) /* ty=Tensor[(1, 128, 1), float32] */;
  %866 = fn (%p0253: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1183: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0253, %p1183, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %867 = %866(%863, %865) /* ty=Tensor[(1, 128, 1), float32] */;
  %868 = fn (%p0145: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1105: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p248: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p324: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p416: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %394 = add(%p248, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %395 = subtract(%p0145, %p1105) /* ty=Tensor[(1, 128, 768), float32] */;
    %396 = sqrt(%394) /* ty=Tensor[(1, 128, 1), float32] */;
    %397 = divide(%395, %396) /* ty=Tensor[(1, 128, 768), float32] */;
    %398 = multiply(%397, %p324) /* ty=Tensor[(1, 128, 768), float32] */;
    %399 = add(%398, %p416) /* ty=Tensor[(1, 128, 768), float32] */;
    %400 = broadcast_to(%399, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %401 = reshape(%400, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%401, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %869 = %868(%863, %865, %867, meta[relay.Constant][70] /* ty=Tensor[(768), float32] */, meta[relay.Constant][71] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %870 = fn (%p0144: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1104: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0144, %p1104, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %871 = %870(%869, meta[relay.Constant][72] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %872 = fn (%p0143: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1103: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %388 = reshape(%p0143, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %389 = squeeze(%388, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %390 = add(%389, %p1103) /* ty=Tensor[(1, 128, 768), float16] */;
    %391 = reshape(%390, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %392 = transpose(%391, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %393 = broadcast_to(%392, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%393, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %880 = fn (%p0255: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1185: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0255, %p1185, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %881 = %880(%869, meta[relay.Constant][74] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %882 = fn (%p0254: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1184: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %873 = reshape(%p0254, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %874 = squeeze(%873, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %875 = add(%874, %p1184) /* ty=Tensor[(1, 128, 768), float16] */;
    %876 = reshape(%875, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %877 = transpose(%876, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %878 = transpose(%877, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %879 = broadcast_to(%878, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%879, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %883 = %872(%871, meta[relay.Constant][73] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %884 = %882(%881, meta[relay.Constant][75] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %885 = fn (%p0142: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p1102: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p0142, %p1102, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %886 = %885(%883, %884) /* ty=Tensor[(12, 128, 128), float16] */;
  %887 = fn (%p0141: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1101: float16 /* ty=float16 */, %p247: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p323: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %385 = reshape(%p0141, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %386 = squeeze(%385, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %387 = multiply(%386, %p1101) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p247, %p323, %387) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %888 = %887(%886, 0.125f16 /* ty=float16 */, meta[relay.Constant][76] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %889 = fn (%p0140: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %384 = nn.softmax(%p0140) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%384, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %890 = %889(%888) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %891 = fn (%p0139: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p0139, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %898 = fn (%p0257: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1187: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0257, %p1187, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %899 = %898(%869, meta[relay.Constant][77] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %900 = fn (%p0256: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1186: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %892 = reshape(%p0256, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %893 = squeeze(%892, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %894 = add(%893, %p1186) /* ty=Tensor[(1, 128, 768), float16] */;
    %895 = reshape(%894, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %896 = transpose(%895, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %897 = broadcast_to(%896, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%897, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %901 = %891(%890) /* ty=Tensor[(12, 128, 128), float16] */;
  %902 = %900(%899, meta[relay.Constant][78] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %903 = fn (%p0138: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1100: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p0138, %p1100, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %904 = %903(%901, %902) /* ty=Tensor[(12, 128, 64), float16] */;
  %905 = fn (%p0137: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %379 = reshape(%p0137, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %380 = squeeze(%379, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %381 = transpose(%380, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %382 = reshape(%381, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %383 = broadcast_to(%382, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%383, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %906 = %905(%904) /* ty=Tensor[(1, 128, 768), float16] */;
  %907 = fn (%p0136: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p199: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0136, %p199, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %908 = %907(%906, meta[relay.Constant][79] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %909 = fn (%p0135: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p198: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p246: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %376 = reshape(%p0135, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %377 = squeeze(%376, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %378 = add(%377, %p198) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p246, %378) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %910 = %909(%908, meta[relay.Constant][80] /* ty=Tensor[(768), float16] */, %861) /* ty=Tensor[(1, 128, 768), float16] */;
  %911 = fn (%p0134: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0134, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %912 = %911(%910) /* ty=Tensor[(1, 128, 768), float32] */;
  %913 = fn (%p0258: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0258, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %914 = %913(%912) /* ty=Tensor[(1, 128, 1), float32] */;
  %915 = fn (%p0259: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1188: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0259, %p1188, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %916 = %915(%912, %914) /* ty=Tensor[(1, 128, 1), float32] */;
  %917 = fn (%p0133: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p197: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p245: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p322: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p415: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %368 = add(%p245, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %369 = subtract(%p0133, %p197) /* ty=Tensor[(1, 128, 768), float32] */;
    %370 = sqrt(%368) /* ty=Tensor[(1, 128, 1), float32] */;
    %371 = divide(%369, %370) /* ty=Tensor[(1, 128, 768), float32] */;
    %372 = multiply(%371, %p322) /* ty=Tensor[(1, 128, 768), float32] */;
    %373 = add(%372, %p415) /* ty=Tensor[(1, 128, 768), float32] */;
    %374 = broadcast_to(%373, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %375 = reshape(%374, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%375, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %918 = %917(%912, %914, %916, meta[relay.Constant][81] /* ty=Tensor[(768), float32] */, meta[relay.Constant][82] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %919 = fn (%p0132: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p196: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p0132, %p196, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %920 = %919(%918, meta[relay.Constant][83] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %921 = fn (%p0131: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p195: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p244: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %356 = reshape(%p0131, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %357 = squeeze(%356, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %358 = add(%357, %p195) /* ty=Tensor[(1, 128, 3072), float16] */;
    %359 = multiply(%358, %p244) /* ty=Tensor[(1, 128, 3072), float16] */;
    %360 = cast(%359, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %361 = erf(%360) /* ty=Tensor[(1, 128, 3072), float32] */;
    %362 = multiply(%361, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 3072), float32] */;
    %363 = cast(%358, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %364 = add(0.5f /* ty=float32 */, %362) /* ty=Tensor[(1, 128, 3072), float32] */;
    %365 = multiply(%363, %364) /* ty=Tensor[(1, 128, 3072), float32] */;
    %366 = broadcast_to(%365, shape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    %367 = reshape(%366, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    cast(%367, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16) -> Tensor[(1, 128, 3072), float16] */;
  %922 = %921(%920, meta[relay.Constant][84] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %923 = fn (%p0130: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p194: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0130, %p194, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %924 = %923(%922, meta[relay.Constant][85] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %925 = fn (%p0129: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p193: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p243: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %353 = reshape(%p0129, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %354 = squeeze(%353, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %355 = add(%354, %p193) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p243, %355) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %926 = %925(%924, meta[relay.Constant][86] /* ty=Tensor[(768), float16] */, %910) /* ty=Tensor[(1, 128, 768), float16] */;
  %927 = fn (%p0128: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0128, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %928 = %927(%926) /* ty=Tensor[(1, 128, 768), float32] */;
  %929 = fn (%p0260: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0260, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %930 = %929(%928) /* ty=Tensor[(1, 128, 1), float32] */;
  %931 = fn (%p0261: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1189: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0261, %p1189, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %932 = %931(%928, %930) /* ty=Tensor[(1, 128, 1), float32] */;
  %933 = fn (%p0127: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p192: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p242: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p321: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p414: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %345 = add(%p242, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %346 = subtract(%p0127, %p192) /* ty=Tensor[(1, 128, 768), float32] */;
    %347 = sqrt(%345) /* ty=Tensor[(1, 128, 1), float32] */;
    %348 = divide(%346, %347) /* ty=Tensor[(1, 128, 768), float32] */;
    %349 = multiply(%348, %p321) /* ty=Tensor[(1, 128, 768), float32] */;
    %350 = add(%349, %p414) /* ty=Tensor[(1, 128, 768), float32] */;
    %351 = broadcast_to(%350, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %352 = reshape(%351, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%352, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %934 = %933(%928, %930, %932, meta[relay.Constant][87] /* ty=Tensor[(768), float32] */, meta[relay.Constant][88] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %935 = fn (%p0126: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p191: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0126, %p191, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %936 = %935(%934, meta[relay.Constant][89] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %937 = fn (%p0125: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p190: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %339 = reshape(%p0125, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %340 = squeeze(%339, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %341 = add(%340, %p190) /* ty=Tensor[(1, 128, 768), float16] */;
    %342 = reshape(%341, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %343 = transpose(%342, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %344 = broadcast_to(%343, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%344, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %945 = fn (%p0263: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1191: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0263, %p1191, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %946 = %945(%934, meta[relay.Constant][91] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %947 = fn (%p0262: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1190: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %938 = reshape(%p0262, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %939 = squeeze(%938, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %940 = add(%939, %p1190) /* ty=Tensor[(1, 128, 768), float16] */;
    %941 = reshape(%940, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %942 = transpose(%941, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %943 = transpose(%942, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %944 = broadcast_to(%943, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%944, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %948 = %937(%936, meta[relay.Constant][90] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %949 = %947(%946, meta[relay.Constant][92] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %950 = fn (%p0124: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p189: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p0124, %p189, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %951 = %950(%948, %949) /* ty=Tensor[(12, 128, 128), float16] */;
  %952 = fn (%p0123: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p188: float16 /* ty=float16 */, %p241: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p320: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %336 = reshape(%p0123, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %337 = squeeze(%336, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %338 = multiply(%337, %p188) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p241, %p320, %338) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %953 = %952(%951, 0.125f16 /* ty=float16 */, meta[relay.Constant][93] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %954 = fn (%p0122: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %335 = nn.softmax(%p0122) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%335, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %955 = %954(%953) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %956 = fn (%p0121: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p0121, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %963 = fn (%p0265: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1193: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0265, %p1193, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %964 = %963(%934, meta[relay.Constant][94] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %965 = fn (%p0264: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1192: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %957 = reshape(%p0264, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %958 = squeeze(%957, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %959 = add(%958, %p1192) /* ty=Tensor[(1, 128, 768), float16] */;
    %960 = reshape(%959, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %961 = transpose(%960, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %962 = broadcast_to(%961, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%962, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %966 = %956(%955) /* ty=Tensor[(12, 128, 128), float16] */;
  %967 = %965(%964, meta[relay.Constant][95] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %968 = fn (%p0120: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p187: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p0120, %p187, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %969 = %968(%966, %967) /* ty=Tensor[(12, 128, 64), float16] */;
  %970 = fn (%p0119: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %330 = reshape(%p0119, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %331 = squeeze(%330, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %332 = transpose(%331, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %333 = reshape(%332, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %334 = broadcast_to(%333, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%334, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %971 = %970(%969) /* ty=Tensor[(1, 128, 768), float16] */;
  %972 = fn (%p0118: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p186: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0118, %p186, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %973 = %972(%971, meta[relay.Constant][96] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %974 = fn (%p0117: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p185: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p240: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %327 = reshape(%p0117, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %328 = squeeze(%327, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %329 = add(%328, %p185) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p240, %329) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %975 = %974(%973, meta[relay.Constant][97] /* ty=Tensor[(768), float16] */, %926) /* ty=Tensor[(1, 128, 768), float16] */;
  %976 = fn (%p0116: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0116, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %977 = %976(%975) /* ty=Tensor[(1, 128, 768), float32] */;
  %978 = fn (%p0266: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0266, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %979 = %978(%977) /* ty=Tensor[(1, 128, 1), float32] */;
  %980 = fn (%p0267: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1194: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0267, %p1194, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %981 = %980(%977, %979) /* ty=Tensor[(1, 128, 1), float32] */;
  %982 = fn (%p0115: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p184: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p239: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p319: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p413: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %319 = add(%p239, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %320 = subtract(%p0115, %p184) /* ty=Tensor[(1, 128, 768), float32] */;
    %321 = sqrt(%319) /* ty=Tensor[(1, 128, 1), float32] */;
    %322 = divide(%320, %321) /* ty=Tensor[(1, 128, 768), float32] */;
    %323 = multiply(%322, %p319) /* ty=Tensor[(1, 128, 768), float32] */;
    %324 = add(%323, %p413) /* ty=Tensor[(1, 128, 768), float32] */;
    %325 = broadcast_to(%324, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %326 = reshape(%325, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%326, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %983 = %982(%977, %979, %981, meta[relay.Constant][98] /* ty=Tensor[(768), float32] */, meta[relay.Constant][99] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %984 = fn (%p0114: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p183: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p0114, %p183, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %985 = %984(%983, meta[relay.Constant][100] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %986 = fn (%p0113: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p182: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p238: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %307 = reshape(%p0113, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %308 = squeeze(%307, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %309 = add(%308, %p182) /* ty=Tensor[(1, 128, 3072), float16] */;
    %310 = multiply(%309, %p238) /* ty=Tensor[(1, 128, 3072), float16] */;
    %311 = cast(%310, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %312 = erf(%311) /* ty=Tensor[(1, 128, 3072), float32] */;
    %313 = multiply(%312, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 3072), float32] */;
    %314 = cast(%309, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %315 = add(0.5f /* ty=float32 */, %313) /* ty=Tensor[(1, 128, 3072), float32] */;
    %316 = multiply(%314, %315) /* ty=Tensor[(1, 128, 3072), float32] */;
    %317 = broadcast_to(%316, shape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    %318 = reshape(%317, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    cast(%318, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16) -> Tensor[(1, 128, 3072), float16] */;
  %987 = %986(%985, meta[relay.Constant][101] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %988 = fn (%p0112: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p181: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0112, %p181, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %989 = %988(%987, meta[relay.Constant][102] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %990 = fn (%p0111: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p180: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p237: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %304 = reshape(%p0111, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %305 = squeeze(%304, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %306 = add(%305, %p180) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p237, %306) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %991 = %990(%989, meta[relay.Constant][103] /* ty=Tensor[(768), float16] */, %975) /* ty=Tensor[(1, 128, 768), float16] */;
  %992 = fn (%p0110: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0110, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %993 = %992(%991) /* ty=Tensor[(1, 128, 768), float32] */;
  %994 = fn (%p0268: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0268, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %995 = %994(%993) /* ty=Tensor[(1, 128, 1), float32] */;
  %996 = fn (%p0269: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1195: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0269, %p1195, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %997 = %996(%993, %995) /* ty=Tensor[(1, 128, 1), float32] */;
  %998 = fn (%p0109: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p179: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p236: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p318: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p412: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %296 = add(%p236, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %297 = subtract(%p0109, %p179) /* ty=Tensor[(1, 128, 768), float32] */;
    %298 = sqrt(%296) /* ty=Tensor[(1, 128, 1), float32] */;
    %299 = divide(%297, %298) /* ty=Tensor[(1, 128, 768), float32] */;
    %300 = multiply(%299, %p318) /* ty=Tensor[(1, 128, 768), float32] */;
    %301 = add(%300, %p412) /* ty=Tensor[(1, 128, 768), float32] */;
    %302 = broadcast_to(%301, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %303 = reshape(%302, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%303, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %999 = %998(%993, %995, %997, meta[relay.Constant][104] /* ty=Tensor[(768), float32] */, meta[relay.Constant][105] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1000 = fn (%p0108: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p178: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0108, %p178, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1001 = %1000(%999, meta[relay.Constant][106] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1002 = fn (%p0107: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p177: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %290 = reshape(%p0107, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %291 = squeeze(%290, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %292 = add(%291, %p177) /* ty=Tensor[(1, 128, 768), float16] */;
    %293 = reshape(%292, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %294 = transpose(%293, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %295 = broadcast_to(%294, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%295, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1010 = fn (%p0271: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1197: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0271, %p1197, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1011 = %1010(%999, meta[relay.Constant][108] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1012 = fn (%p0270: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1196: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %1003 = reshape(%p0270, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1004 = squeeze(%1003, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1005 = add(%1004, %p1196) /* ty=Tensor[(1, 128, 768), float16] */;
    %1006 = reshape(%1005, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1007 = transpose(%1006, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1008 = transpose(%1007, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %1009 = broadcast_to(%1008, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%1009, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %1013 = %1002(%1001, meta[relay.Constant][107] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1014 = %1012(%1011, meta[relay.Constant][109] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %1015 = fn (%p0106: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p176: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p0106, %p176, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1016 = %1015(%1013, %1014) /* ty=Tensor[(12, 128, 128), float16] */;
  %1017 = fn (%p0105: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p175: float16 /* ty=float16 */, %p235: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p317: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %287 = reshape(%p0105, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %288 = squeeze(%287, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %289 = multiply(%288, %p175) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p235, %p317, %289) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %1018 = %1017(%1016, 0.125f16 /* ty=float16 */, meta[relay.Constant][110] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1019 = fn (%p0104: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %286 = nn.softmax(%p0104) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%286, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %1020 = %1019(%1018) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1021 = fn (%p0103: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p0103, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1028 = fn (%p0273: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1199: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0273, %p1199, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1029 = %1028(%999, meta[relay.Constant][111] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1030 = fn (%p0272: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1198: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %1022 = reshape(%p0272, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1023 = squeeze(%1022, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1024 = add(%1023, %p1198) /* ty=Tensor[(1, 128, 768), float16] */;
    %1025 = reshape(%1024, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1026 = transpose(%1025, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1027 = broadcast_to(%1026, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%1027, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1031 = %1021(%1020) /* ty=Tensor[(12, 128, 128), float16] */;
  %1032 = %1030(%1029, meta[relay.Constant][112] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1033 = fn (%p0102: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p174: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p0102, %p174, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1034 = %1033(%1031, %1032) /* ty=Tensor[(12, 128, 64), float16] */;
  %1035 = fn (%p0101: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %281 = reshape(%p0101, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %282 = squeeze(%281, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %283 = transpose(%282, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %284 = reshape(%283, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %285 = broadcast_to(%284, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%285, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1036 = %1035(%1034) /* ty=Tensor[(1, 128, 768), float16] */;
  %1037 = fn (%p0100: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p173: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0100, %p173, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1038 = %1037(%1036, meta[relay.Constant][113] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1039 = fn (%p099: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p172: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p234: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %278 = reshape(%p099, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %279 = squeeze(%278, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %280 = add(%279, %p172) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p234, %280) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1040 = %1039(%1038, meta[relay.Constant][114] /* ty=Tensor[(768), float16] */, %991) /* ty=Tensor[(1, 128, 768), float16] */;
  %1041 = fn (%p098: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p098, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1042 = %1041(%1040) /* ty=Tensor[(1, 128, 768), float32] */;
  %1043 = fn (%p0274: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0274, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1044 = %1043(%1042) /* ty=Tensor[(1, 128, 1), float32] */;
  %1045 = fn (%p0275: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1200: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0275, %p1200, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1046 = %1045(%1042, %1044) /* ty=Tensor[(1, 128, 1), float32] */;
  %1047 = fn (%p097: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p171: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p233: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p316: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p411: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %270 = add(%p233, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %271 = subtract(%p097, %p171) /* ty=Tensor[(1, 128, 768), float32] */;
    %272 = sqrt(%270) /* ty=Tensor[(1, 128, 1), float32] */;
    %273 = divide(%271, %272) /* ty=Tensor[(1, 128, 768), float32] */;
    %274 = multiply(%273, %p316) /* ty=Tensor[(1, 128, 768), float32] */;
    %275 = add(%274, %p411) /* ty=Tensor[(1, 128, 768), float32] */;
    %276 = broadcast_to(%275, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %277 = reshape(%276, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%277, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %1048 = %1047(%1042, %1044, %1046, meta[relay.Constant][115] /* ty=Tensor[(768), float32] */, meta[relay.Constant][116] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1049 = fn (%p096: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p170: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p096, %p170, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %1050 = %1049(%1048, meta[relay.Constant][117] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1051 = fn (%p095: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p169: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p232: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %258 = reshape(%p095, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %259 = squeeze(%258, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %260 = add(%259, %p169) /* ty=Tensor[(1, 128, 3072), float16] */;
    %261 = multiply(%260, %p232) /* ty=Tensor[(1, 128, 3072), float16] */;
    %262 = cast(%261, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %263 = erf(%262) /* ty=Tensor[(1, 128, 3072), float32] */;
    %264 = multiply(%263, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 3072), float32] */;
    %265 = cast(%260, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %266 = add(0.5f /* ty=float32 */, %264) /* ty=Tensor[(1, 128, 3072), float32] */;
    %267 = multiply(%265, %266) /* ty=Tensor[(1, 128, 3072), float32] */;
    %268 = broadcast_to(%267, shape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    %269 = reshape(%268, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    cast(%269, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16) -> Tensor[(1, 128, 3072), float16] */;
  %1052 = %1051(%1050, meta[relay.Constant][118] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1053 = fn (%p094: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p168: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p094, %p168, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1054 = %1053(%1052, meta[relay.Constant][119] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1055 = fn (%p093: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p167: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p231: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %255 = reshape(%p093, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %256 = squeeze(%255, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %257 = add(%256, %p167) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p231, %257) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1056 = %1055(%1054, meta[relay.Constant][120] /* ty=Tensor[(768), float16] */, %1040) /* ty=Tensor[(1, 128, 768), float16] */;
  %1057 = fn (%p092: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p092, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1058 = %1057(%1056) /* ty=Tensor[(1, 128, 768), float32] */;
  %1059 = fn (%p0276: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0276, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1060 = %1059(%1058) /* ty=Tensor[(1, 128, 1), float32] */;
  %1061 = fn (%p0277: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1201: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0277, %p1201, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1062 = %1061(%1058, %1060) /* ty=Tensor[(1, 128, 1), float32] */;
  %1063 = fn (%p091: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p166: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p230: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p315: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p410: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %247 = add(%p230, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %248 = subtract(%p091, %p166) /* ty=Tensor[(1, 128, 768), float32] */;
    %249 = sqrt(%247) /* ty=Tensor[(1, 128, 1), float32] */;
    %250 = divide(%248, %249) /* ty=Tensor[(1, 128, 768), float32] */;
    %251 = multiply(%250, %p315) /* ty=Tensor[(1, 128, 768), float32] */;
    %252 = add(%251, %p410) /* ty=Tensor[(1, 128, 768), float32] */;
    %253 = broadcast_to(%252, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %254 = reshape(%253, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%254, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %1064 = %1063(%1058, %1060, %1062, meta[relay.Constant][121] /* ty=Tensor[(768), float32] */, meta[relay.Constant][122] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1065 = fn (%p090: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p165: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p090, %p165, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1066 = %1065(%1064, meta[relay.Constant][123] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1067 = fn (%p089: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p164: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %241 = reshape(%p089, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %242 = squeeze(%241, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %243 = add(%242, %p164) /* ty=Tensor[(1, 128, 768), float16] */;
    %244 = reshape(%243, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %245 = transpose(%244, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %246 = broadcast_to(%245, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%246, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1075 = fn (%p0279: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1203: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0279, %p1203, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1076 = %1075(%1064, meta[relay.Constant][125] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1077 = fn (%p0278: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1202: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %1068 = reshape(%p0278, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1069 = squeeze(%1068, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1070 = add(%1069, %p1202) /* ty=Tensor[(1, 128, 768), float16] */;
    %1071 = reshape(%1070, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1072 = transpose(%1071, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1073 = transpose(%1072, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %1074 = broadcast_to(%1073, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%1074, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %1078 = %1067(%1066, meta[relay.Constant][124] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1079 = %1077(%1076, meta[relay.Constant][126] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %1080 = fn (%p088: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p163: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p088, %p163, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1081 = %1080(%1078, %1079) /* ty=Tensor[(12, 128, 128), float16] */;
  %1082 = fn (%p087: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p162: float16 /* ty=float16 */, %p229: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p314: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %238 = reshape(%p087, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %239 = squeeze(%238, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %240 = multiply(%239, %p162) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p229, %p314, %240) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %1083 = %1082(%1081, 0.125f16 /* ty=float16 */, meta[relay.Constant][127] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1084 = fn (%p086: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %237 = nn.softmax(%p086) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%237, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %1085 = %1084(%1083) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1086 = fn (%p085: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p085, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1093 = fn (%p0281: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1205: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0281, %p1205, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1094 = %1093(%1064, meta[relay.Constant][128] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1095 = fn (%p0280: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1204: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %1087 = reshape(%p0280, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1088 = squeeze(%1087, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1089 = add(%1088, %p1204) /* ty=Tensor[(1, 128, 768), float16] */;
    %1090 = reshape(%1089, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1091 = transpose(%1090, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1092 = broadcast_to(%1091, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%1092, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1096 = %1086(%1085) /* ty=Tensor[(12, 128, 128), float16] */;
  %1097 = %1095(%1094, meta[relay.Constant][129] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1098 = fn (%p084: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p161: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p084, %p161, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1099 = %1098(%1096, %1097) /* ty=Tensor[(12, 128, 64), float16] */;
  %1100 = fn (%p083: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %232 = reshape(%p083, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %233 = squeeze(%232, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %234 = transpose(%233, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %235 = reshape(%234, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %236 = broadcast_to(%235, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%236, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1101 = %1100(%1099) /* ty=Tensor[(1, 128, 768), float16] */;
  %1102 = fn (%p082: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p160: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p082, %p160, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1103 = %1102(%1101, meta[relay.Constant][130] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1104 = fn (%p081: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p159: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p228: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %229 = reshape(%p081, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %230 = squeeze(%229, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %231 = add(%230, %p159) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p228, %231) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1105 = %1104(%1103, meta[relay.Constant][131] /* ty=Tensor[(768), float16] */, %1056) /* ty=Tensor[(1, 128, 768), float16] */;
  %1106 = fn (%p080: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p080, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1107 = %1106(%1105) /* ty=Tensor[(1, 128, 768), float32] */;
  %1108 = fn (%p0282: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0282, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1109 = %1108(%1107) /* ty=Tensor[(1, 128, 1), float32] */;
  %1110 = fn (%p0283: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1206: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0283, %p1206, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1111 = %1110(%1107, %1109) /* ty=Tensor[(1, 128, 1), float32] */;
  %1112 = fn (%p079: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p158: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p227: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p313: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p49: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %221 = add(%p227, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %222 = subtract(%p079, %p158) /* ty=Tensor[(1, 128, 768), float32] */;
    %223 = sqrt(%221) /* ty=Tensor[(1, 128, 1), float32] */;
    %224 = divide(%222, %223) /* ty=Tensor[(1, 128, 768), float32] */;
    %225 = multiply(%224, %p313) /* ty=Tensor[(1, 128, 768), float32] */;
    %226 = add(%225, %p49) /* ty=Tensor[(1, 128, 768), float32] */;
    %227 = broadcast_to(%226, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %228 = reshape(%227, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%228, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %1113 = %1112(%1107, %1109, %1111, meta[relay.Constant][132] /* ty=Tensor[(768), float32] */, meta[relay.Constant][133] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1114 = fn (%p078: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p157: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p078, %p157, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %1115 = %1114(%1113, meta[relay.Constant][134] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1116 = fn (%p077: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p156: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p226: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %209 = reshape(%p077, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %210 = squeeze(%209, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %211 = add(%210, %p156) /* ty=Tensor[(1, 128, 3072), float16] */;
    %212 = multiply(%211, %p226) /* ty=Tensor[(1, 128, 3072), float16] */;
    %213 = cast(%212, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %214 = erf(%213) /* ty=Tensor[(1, 128, 3072), float32] */;
    %215 = multiply(%214, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 3072), float32] */;
    %216 = cast(%211, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %217 = add(0.5f /* ty=float32 */, %215) /* ty=Tensor[(1, 128, 3072), float32] */;
    %218 = multiply(%216, %217) /* ty=Tensor[(1, 128, 3072), float32] */;
    %219 = broadcast_to(%218, shape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    %220 = reshape(%219, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    cast(%220, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16) -> Tensor[(1, 128, 3072), float16] */;
  %1117 = %1116(%1115, meta[relay.Constant][135] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1118 = fn (%p076: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p155: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p076, %p155, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1119 = %1118(%1117, meta[relay.Constant][136] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1120 = fn (%p075: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p154: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p225: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %206 = reshape(%p075, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %207 = squeeze(%206, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %208 = add(%207, %p154) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p225, %208) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1121 = %1120(%1119, meta[relay.Constant][137] /* ty=Tensor[(768), float16] */, %1105) /* ty=Tensor[(1, 128, 768), float16] */;
  %1122 = fn (%p074: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p074, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1123 = %1122(%1121) /* ty=Tensor[(1, 128, 768), float32] */;
  %1124 = fn (%p0284: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0284, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1125 = %1124(%1123) /* ty=Tensor[(1, 128, 1), float32] */;
  %1126 = fn (%p0285: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1207: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0285, %p1207, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1127 = %1126(%1123, %1125) /* ty=Tensor[(1, 128, 1), float32] */;
  %1128 = fn (%p073: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p153: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p224: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p312: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p48: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %198 = add(%p224, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %199 = subtract(%p073, %p153) /* ty=Tensor[(1, 128, 768), float32] */;
    %200 = sqrt(%198) /* ty=Tensor[(1, 128, 1), float32] */;
    %201 = divide(%199, %200) /* ty=Tensor[(1, 128, 768), float32] */;
    %202 = multiply(%201, %p312) /* ty=Tensor[(1, 128, 768), float32] */;
    %203 = add(%202, %p48) /* ty=Tensor[(1, 128, 768), float32] */;
    %204 = broadcast_to(%203, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %205 = reshape(%204, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%205, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %1129 = %1128(%1123, %1125, %1127, meta[relay.Constant][138] /* ty=Tensor[(768), float32] */, meta[relay.Constant][139] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1130 = fn (%p072: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p152: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p072, %p152, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1131 = %1130(%1129, meta[relay.Constant][140] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1132 = fn (%p071: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p151: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %192 = reshape(%p071, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %193 = squeeze(%192, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %194 = add(%193, %p151) /* ty=Tensor[(1, 128, 768), float16] */;
    %195 = reshape(%194, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %196 = transpose(%195, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %197 = broadcast_to(%196, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%197, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1140 = fn (%p0287: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1209: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0287, %p1209, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1141 = %1140(%1129, meta[relay.Constant][142] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1142 = fn (%p0286: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1208: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %1133 = reshape(%p0286, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1134 = squeeze(%1133, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1135 = add(%1134, %p1208) /* ty=Tensor[(1, 128, 768), float16] */;
    %1136 = reshape(%1135, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1137 = transpose(%1136, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1138 = transpose(%1137, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %1139 = broadcast_to(%1138, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%1139, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %1143 = %1132(%1131, meta[relay.Constant][141] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1144 = %1142(%1141, meta[relay.Constant][143] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %1145 = fn (%p070: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p150: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p070, %p150, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1146 = %1145(%1143, %1144) /* ty=Tensor[(12, 128, 128), float16] */;
  %1147 = fn (%p069: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p149: float16 /* ty=float16 */, %p223: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p311: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %189 = reshape(%p069, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %190 = squeeze(%189, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %191 = multiply(%190, %p149) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p223, %p311, %191) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %1148 = %1147(%1146, 0.125f16 /* ty=float16 */, meta[relay.Constant][144] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1149 = fn (%p068: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %188 = nn.softmax(%p068) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%188, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %1150 = %1149(%1148) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1151 = fn (%p067: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p067, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1158 = fn (%p0289: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1211: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0289, %p1211, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1159 = %1158(%1129, meta[relay.Constant][145] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1160 = fn (%p0288: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1210: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %1152 = reshape(%p0288, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1153 = squeeze(%1152, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1154 = add(%1153, %p1210) /* ty=Tensor[(1, 128, 768), float16] */;
    %1155 = reshape(%1154, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1156 = transpose(%1155, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1157 = broadcast_to(%1156, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%1157, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1161 = %1151(%1150) /* ty=Tensor[(12, 128, 128), float16] */;
  %1162 = %1160(%1159, meta[relay.Constant][146] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1163 = fn (%p066: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p148: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p066, %p148, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1164 = %1163(%1161, %1162) /* ty=Tensor[(12, 128, 64), float16] */;
  %1165 = fn (%p065: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %183 = reshape(%p065, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %184 = squeeze(%183, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %185 = transpose(%184, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %186 = reshape(%185, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %187 = broadcast_to(%186, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%187, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1166 = %1165(%1164) /* ty=Tensor[(1, 128, 768), float16] */;
  %1167 = fn (%p064: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p147: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p064, %p147, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1168 = %1167(%1166, meta[relay.Constant][147] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1169 = fn (%p063: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p146: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p222: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %180 = reshape(%p063, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %181 = squeeze(%180, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %182 = add(%181, %p146) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p222, %182) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1170 = %1169(%1168, meta[relay.Constant][148] /* ty=Tensor[(768), float16] */, %1121) /* ty=Tensor[(1, 128, 768), float16] */;
  %1171 = fn (%p062: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p062, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1172 = %1171(%1170) /* ty=Tensor[(1, 128, 768), float32] */;
  %1173 = fn (%p0290: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0290, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1174 = %1173(%1172) /* ty=Tensor[(1, 128, 1), float32] */;
  %1175 = fn (%p0291: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1212: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0291, %p1212, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1176 = %1175(%1172, %1174) /* ty=Tensor[(1, 128, 1), float32] */;
  %1177 = fn (%p061: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p145: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p221: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p310: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p47: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %172 = add(%p221, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %173 = subtract(%p061, %p145) /* ty=Tensor[(1, 128, 768), float32] */;
    %174 = sqrt(%172) /* ty=Tensor[(1, 128, 1), float32] */;
    %175 = divide(%173, %174) /* ty=Tensor[(1, 128, 768), float32] */;
    %176 = multiply(%175, %p310) /* ty=Tensor[(1, 128, 768), float32] */;
    %177 = add(%176, %p47) /* ty=Tensor[(1, 128, 768), float32] */;
    %178 = broadcast_to(%177, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %179 = reshape(%178, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%179, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %1178 = %1177(%1172, %1174, %1176, meta[relay.Constant][149] /* ty=Tensor[(768), float32] */, meta[relay.Constant][150] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1179 = fn (%p060: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p144: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p060, %p144, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %1180 = %1179(%1178, meta[relay.Constant][151] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1181 = fn (%p059: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p143: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p220: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %160 = reshape(%p059, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %161 = squeeze(%160, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %162 = add(%161, %p143) /* ty=Tensor[(1, 128, 3072), float16] */;
    %163 = multiply(%162, %p220) /* ty=Tensor[(1, 128, 3072), float16] */;
    %164 = cast(%163, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %165 = erf(%164) /* ty=Tensor[(1, 128, 3072), float32] */;
    %166 = multiply(%165, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 3072), float32] */;
    %167 = cast(%162, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %168 = add(0.5f /* ty=float32 */, %166) /* ty=Tensor[(1, 128, 3072), float32] */;
    %169 = multiply(%167, %168) /* ty=Tensor[(1, 128, 3072), float32] */;
    %170 = broadcast_to(%169, shape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    %171 = reshape(%170, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    cast(%171, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16) -> Tensor[(1, 128, 3072), float16] */;
  %1182 = %1181(%1180, meta[relay.Constant][152] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1183 = fn (%p058: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p142: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p058, %p142, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1184 = %1183(%1182, meta[relay.Constant][153] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1185 = fn (%p057: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p141: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p219: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %157 = reshape(%p057, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %158 = squeeze(%157, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %159 = add(%158, %p141) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p219, %159) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1186 = %1185(%1184, meta[relay.Constant][154] /* ty=Tensor[(768), float16] */, %1170) /* ty=Tensor[(1, 128, 768), float16] */;
  %1187 = fn (%p056: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p056, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1188 = %1187(%1186) /* ty=Tensor[(1, 128, 768), float32] */;
  %1189 = fn (%p0292: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0292, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1190 = %1189(%1188) /* ty=Tensor[(1, 128, 1), float32] */;
  %1191 = fn (%p0293: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1213: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0293, %p1213, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1192 = %1191(%1188, %1190) /* ty=Tensor[(1, 128, 1), float32] */;
  %1193 = fn (%p055: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p140: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p218: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p39: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p46: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %149 = add(%p218, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %150 = subtract(%p055, %p140) /* ty=Tensor[(1, 128, 768), float32] */;
    %151 = sqrt(%149) /* ty=Tensor[(1, 128, 1), float32] */;
    %152 = divide(%150, %151) /* ty=Tensor[(1, 128, 768), float32] */;
    %153 = multiply(%152, %p39) /* ty=Tensor[(1, 128, 768), float32] */;
    %154 = add(%153, %p46) /* ty=Tensor[(1, 128, 768), float32] */;
    %155 = broadcast_to(%154, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %156 = reshape(%155, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%156, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %1194 = %1193(%1188, %1190, %1192, meta[relay.Constant][155] /* ty=Tensor[(768), float32] */, meta[relay.Constant][156] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1195 = fn (%p054: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p139: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p054, %p139, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1196 = %1195(%1194, meta[relay.Constant][157] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1197 = fn (%p053: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p138: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %143 = reshape(%p053, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %144 = squeeze(%143, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %145 = add(%144, %p138) /* ty=Tensor[(1, 128, 768), float16] */;
    %146 = reshape(%145, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %147 = transpose(%146, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %148 = broadcast_to(%147, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%148, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1205 = fn (%p0295: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1215: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0295, %p1215, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1206 = %1205(%1194, meta[relay.Constant][159] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1207 = fn (%p0294: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1214: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %1198 = reshape(%p0294, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1199 = squeeze(%1198, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1200 = add(%1199, %p1214) /* ty=Tensor[(1, 128, 768), float16] */;
    %1201 = reshape(%1200, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1202 = transpose(%1201, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1203 = transpose(%1202, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %1204 = broadcast_to(%1203, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%1204, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %1208 = %1197(%1196, meta[relay.Constant][158] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1209 = %1207(%1206, meta[relay.Constant][160] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %1210 = fn (%p052: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p137: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p052, %p137, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1211 = %1210(%1208, %1209) /* ty=Tensor[(12, 128, 128), float16] */;
  %1212 = fn (%p051: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p136: float16 /* ty=float16 */, %p217: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p38: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %140 = reshape(%p051, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %141 = squeeze(%140, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %142 = multiply(%141, %p136) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p217, %p38, %142) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %1213 = %1212(%1211, 0.125f16 /* ty=float16 */, meta[relay.Constant][161] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1214 = fn (%p050: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %139 = nn.softmax(%p050) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%139, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %1215 = %1214(%1213) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1216 = fn (%p049: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p049, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1223 = fn (%p0297: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1217: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0297, %p1217, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1224 = %1223(%1194, meta[relay.Constant][162] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1225 = fn (%p0296: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1216: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %1217 = reshape(%p0296, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1218 = squeeze(%1217, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1219 = add(%1218, %p1216) /* ty=Tensor[(1, 128, 768), float16] */;
    %1220 = reshape(%1219, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1221 = transpose(%1220, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1222 = broadcast_to(%1221, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%1222, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1226 = %1216(%1215) /* ty=Tensor[(12, 128, 128), float16] */;
  %1227 = %1225(%1224, meta[relay.Constant][163] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1228 = fn (%p048: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p135: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p048, %p135, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1229 = %1228(%1226, %1227) /* ty=Tensor[(12, 128, 64), float16] */;
  %1230 = fn (%p047: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %134 = reshape(%p047, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %135 = squeeze(%134, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %136 = transpose(%135, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %137 = reshape(%136, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %138 = broadcast_to(%137, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%138, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1231 = %1230(%1229) /* ty=Tensor[(1, 128, 768), float16] */;
  %1232 = fn (%p046: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p134: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p046, %p134, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1233 = %1232(%1231, meta[relay.Constant][164] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1234 = fn (%p045: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p133: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p216: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %131 = reshape(%p045, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %132 = squeeze(%131, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %133 = add(%132, %p133) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p216, %133) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1235 = %1234(%1233, meta[relay.Constant][165] /* ty=Tensor[(768), float16] */, %1186) /* ty=Tensor[(1, 128, 768), float16] */;
  %1236 = fn (%p044: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p044, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1237 = %1236(%1235) /* ty=Tensor[(1, 128, 768), float32] */;
  %1238 = fn (%p0298: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0298, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1239 = %1238(%1237) /* ty=Tensor[(1, 128, 1), float32] */;
  %1240 = fn (%p0299: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1218: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0299, %p1218, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1241 = %1240(%1237, %1239) /* ty=Tensor[(1, 128, 1), float32] */;
  %1242 = fn (%p043: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p132: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p215: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p37: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p45: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %123 = add(%p215, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %124 = subtract(%p043, %p132) /* ty=Tensor[(1, 128, 768), float32] */;
    %125 = sqrt(%123) /* ty=Tensor[(1, 128, 1), float32] */;
    %126 = divide(%124, %125) /* ty=Tensor[(1, 128, 768), float32] */;
    %127 = multiply(%126, %p37) /* ty=Tensor[(1, 128, 768), float32] */;
    %128 = add(%127, %p45) /* ty=Tensor[(1, 128, 768), float32] */;
    %129 = broadcast_to(%128, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %130 = reshape(%129, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%130, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %1243 = %1242(%1237, %1239, %1241, meta[relay.Constant][166] /* ty=Tensor[(768), float32] */, meta[relay.Constant][167] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1244 = fn (%p042: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p131: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p042, %p131, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %1245 = %1244(%1243, meta[relay.Constant][168] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1246 = fn (%p041: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p130: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p214: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %111 = reshape(%p041, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %112 = squeeze(%111, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %113 = add(%112, %p130) /* ty=Tensor[(1, 128, 3072), float16] */;
    %114 = multiply(%113, %p214) /* ty=Tensor[(1, 128, 3072), float16] */;
    %115 = cast(%114, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %116 = erf(%115) /* ty=Tensor[(1, 128, 3072), float32] */;
    %117 = multiply(%116, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 3072), float32] */;
    %118 = cast(%113, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %119 = add(0.5f /* ty=float32 */, %117) /* ty=Tensor[(1, 128, 3072), float32] */;
    %120 = multiply(%118, %119) /* ty=Tensor[(1, 128, 3072), float32] */;
    %121 = broadcast_to(%120, shape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    %122 = reshape(%121, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    cast(%122, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16) -> Tensor[(1, 128, 3072), float16] */;
  %1247 = %1246(%1245, meta[relay.Constant][169] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1248 = fn (%p040: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p129: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p040, %p129, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1249 = %1248(%1247, meta[relay.Constant][170] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1250 = fn (%p039: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p128: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p213: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %108 = reshape(%p039, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %109 = squeeze(%108, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %110 = add(%109, %p128) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p213, %110) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1251 = %1250(%1249, meta[relay.Constant][171] /* ty=Tensor[(768), float16] */, %1235) /* ty=Tensor[(1, 128, 768), float16] */;
  %1252 = fn (%p038: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p038, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1253 = %1252(%1251) /* ty=Tensor[(1, 128, 768), float32] */;
  %1254 = fn (%p0300: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0300, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1255 = %1254(%1253) /* ty=Tensor[(1, 128, 1), float32] */;
  %1256 = fn (%p0301: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1219: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0301, %p1219, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1257 = %1256(%1253, %1255) /* ty=Tensor[(1, 128, 1), float32] */;
  %1258 = fn (%p037: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p127: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p212: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p36: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p44: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %100 = add(%p212, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %101 = subtract(%p037, %p127) /* ty=Tensor[(1, 128, 768), float32] */;
    %102 = sqrt(%100) /* ty=Tensor[(1, 128, 1), float32] */;
    %103 = divide(%101, %102) /* ty=Tensor[(1, 128, 768), float32] */;
    %104 = multiply(%103, %p36) /* ty=Tensor[(1, 128, 768), float32] */;
    %105 = add(%104, %p44) /* ty=Tensor[(1, 128, 768), float32] */;
    %106 = broadcast_to(%105, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %107 = reshape(%106, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%107, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %1259 = %1258(%1253, %1255, %1257, meta[relay.Constant][172] /* ty=Tensor[(768), float32] */, meta[relay.Constant][173] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1260 = fn (%p036: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p126: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p036, %p126, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1261 = %1260(%1259, meta[relay.Constant][174] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1262 = fn (%p035: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p125: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %94 = reshape(%p035, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %95 = squeeze(%94, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %96 = add(%95, %p125) /* ty=Tensor[(1, 128, 768), float16] */;
    %97 = reshape(%96, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %98 = transpose(%97, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %99 = broadcast_to(%98, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%99, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1270 = fn (%p0303: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1221: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0303, %p1221, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1271 = %1270(%1259, meta[relay.Constant][176] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1272 = fn (%p0302: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1220: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %1263 = reshape(%p0302, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1264 = squeeze(%1263, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1265 = add(%1264, %p1220) /* ty=Tensor[(1, 128, 768), float16] */;
    %1266 = reshape(%1265, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1267 = transpose(%1266, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1268 = transpose(%1267, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %1269 = broadcast_to(%1268, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%1269, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %1273 = %1262(%1261, meta[relay.Constant][175] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1274 = %1272(%1271, meta[relay.Constant][177] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %1275 = fn (%p034: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p124: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p034, %p124, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1276 = %1275(%1273, %1274) /* ty=Tensor[(12, 128, 128), float16] */;
  %1277 = fn (%p033: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p123: float16 /* ty=float16 */, %p211: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p35: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %91 = reshape(%p033, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %92 = squeeze(%91, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %93 = multiply(%92, %p123) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p211, %p35, %93) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %1278 = %1277(%1276, 0.125f16 /* ty=float16 */, meta[relay.Constant][178] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1279 = fn (%p032: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %90 = nn.softmax(%p032) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%90, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %1280 = %1279(%1278) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1281 = fn (%p031: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p031, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1288 = fn (%p0305: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1223: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0305, %p1223, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1289 = %1288(%1259, meta[relay.Constant][179] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1290 = fn (%p0304: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1222: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %1282 = reshape(%p0304, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1283 = squeeze(%1282, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1284 = add(%1283, %p1222) /* ty=Tensor[(1, 128, 768), float16] */;
    %1285 = reshape(%1284, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1286 = transpose(%1285, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1287 = broadcast_to(%1286, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%1287, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1291 = %1281(%1280) /* ty=Tensor[(12, 128, 128), float16] */;
  %1292 = %1290(%1289, meta[relay.Constant][180] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1293 = fn (%p030: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p122: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p030, %p122, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1294 = %1293(%1291, %1292) /* ty=Tensor[(12, 128, 64), float16] */;
  %1295 = fn (%p029: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %85 = reshape(%p029, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %86 = squeeze(%85, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %87 = transpose(%86, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %88 = reshape(%87, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %89 = broadcast_to(%88, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%89, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1296 = %1295(%1294) /* ty=Tensor[(1, 128, 768), float16] */;
  %1297 = fn (%p028: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p121: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p028, %p121, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1298 = %1297(%1296, meta[relay.Constant][181] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1299 = fn (%p027: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p120: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p210: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %82 = reshape(%p027, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %83 = squeeze(%82, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %84 = add(%83, %p120) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p210, %84) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1300 = %1299(%1298, meta[relay.Constant][182] /* ty=Tensor[(768), float16] */, %1251) /* ty=Tensor[(1, 128, 768), float16] */;
  %1301 = fn (%p026: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p026, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1302 = %1301(%1300) /* ty=Tensor[(1, 128, 768), float32] */;
  %1303 = fn (%p0306: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0306, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1304 = %1303(%1302) /* ty=Tensor[(1, 128, 1), float32] */;
  %1305 = fn (%p0307: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1224: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0307, %p1224, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1306 = %1305(%1302, %1304) /* ty=Tensor[(1, 128, 1), float32] */;
  %1307 = fn (%p025: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p119: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p29: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p34: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p43: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %74 = add(%p29, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %75 = subtract(%p025, %p119) /* ty=Tensor[(1, 128, 768), float32] */;
    %76 = sqrt(%74) /* ty=Tensor[(1, 128, 1), float32] */;
    %77 = divide(%75, %76) /* ty=Tensor[(1, 128, 768), float32] */;
    %78 = multiply(%77, %p34) /* ty=Tensor[(1, 128, 768), float32] */;
    %79 = add(%78, %p43) /* ty=Tensor[(1, 128, 768), float32] */;
    %80 = broadcast_to(%79, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %81 = reshape(%80, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%81, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %1308 = %1307(%1302, %1304, %1306, meta[relay.Constant][183] /* ty=Tensor[(768), float32] */, meta[relay.Constant][184] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1309 = fn (%p024: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p118: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p024, %p118, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %1310 = %1309(%1308, meta[relay.Constant][185] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1311 = fn (%p023: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p117: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p28: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %62 = reshape(%p023, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %63 = squeeze(%62, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %64 = add(%63, %p117) /* ty=Tensor[(1, 128, 3072), float16] */;
    %65 = multiply(%64, %p28) /* ty=Tensor[(1, 128, 3072), float16] */;
    %66 = cast(%65, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %67 = erf(%66) /* ty=Tensor[(1, 128, 3072), float32] */;
    %68 = multiply(%67, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 3072), float32] */;
    %69 = cast(%64, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %70 = add(0.5f /* ty=float32 */, %68) /* ty=Tensor[(1, 128, 3072), float32] */;
    %71 = multiply(%69, %70) /* ty=Tensor[(1, 128, 3072), float32] */;
    %72 = broadcast_to(%71, shape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    %73 = reshape(%72, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    cast(%73, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16) -> Tensor[(1, 128, 3072), float16] */;
  %1312 = %1311(%1310, meta[relay.Constant][186] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1313 = fn (%p022: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p116: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p022, %p116, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1314 = %1313(%1312, meta[relay.Constant][187] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1315 = fn (%p021: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p115: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p27: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %59 = reshape(%p021, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %60 = squeeze(%59, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %61 = add(%60, %p115) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p27, %61) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1316 = %1315(%1314, meta[relay.Constant][188] /* ty=Tensor[(768), float16] */, %1300) /* ty=Tensor[(1, 128, 768), float16] */;
  %1317 = fn (%p020: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p020, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1318 = %1317(%1316) /* ty=Tensor[(1, 128, 768), float32] */;
  %1319 = fn (%p0308: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0308, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1320 = %1319(%1318) /* ty=Tensor[(1, 128, 1), float32] */;
  %1321 = fn (%p0309: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1225: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0309, %p1225, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1322 = %1321(%1318, %1320) /* ty=Tensor[(1, 128, 1), float32] */;
  %1323 = fn (%p019: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p114: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p26: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p33: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p42: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %51 = add(%p26, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %52 = subtract(%p019, %p114) /* ty=Tensor[(1, 128, 768), float32] */;
    %53 = sqrt(%51) /* ty=Tensor[(1, 128, 1), float32] */;
    %54 = divide(%52, %53) /* ty=Tensor[(1, 128, 768), float32] */;
    %55 = multiply(%54, %p33) /* ty=Tensor[(1, 128, 768), float32] */;
    %56 = add(%55, %p42) /* ty=Tensor[(1, 128, 768), float32] */;
    %57 = broadcast_to(%56, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %58 = reshape(%57, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%58, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %1324 = %1323(%1318, %1320, %1322, meta[relay.Constant][189] /* ty=Tensor[(768), float32] */, meta[relay.Constant][190] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1325 = fn (%p018: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p113: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p018, %p113, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1326 = %1325(%1324, meta[relay.Constant][191] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1327 = fn (%p017: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p112: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %45 = reshape(%p017, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %46 = squeeze(%45, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %47 = add(%46, %p112) /* ty=Tensor[(1, 128, 768), float16] */;
    %48 = reshape(%47, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %49 = transpose(%48, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %50 = broadcast_to(%49, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%50, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1335 = fn (%p0311: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1227: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0311, %p1227, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1336 = %1335(%1324, meta[relay.Constant][193] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1337 = fn (%p0310: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1226: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %1328 = reshape(%p0310, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1329 = squeeze(%1328, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1330 = add(%1329, %p1226) /* ty=Tensor[(1, 128, 768), float16] */;
    %1331 = reshape(%1330, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1332 = transpose(%1331, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1333 = transpose(%1332, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %1334 = broadcast_to(%1333, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%1334, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %1338 = %1327(%1326, meta[relay.Constant][192] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1339 = %1337(%1336, meta[relay.Constant][194] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %1340 = fn (%p016: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p111: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p016, %p111, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1341 = %1340(%1338, %1339) /* ty=Tensor[(12, 128, 128), float16] */;
  %1342 = fn (%p015: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p110: float16 /* ty=float16 */, %p25: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p32: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %42 = reshape(%p015, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %43 = squeeze(%42, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %44 = multiply(%43, %p110) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p25, %p32, %44) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %1343 = %1342(%1341, 0.125f16 /* ty=float16 */, meta[relay.Constant][195] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1344 = fn (%p014: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %41 = nn.softmax(%p014) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%41, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %1345 = %1344(%1343) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1346 = fn (%p013: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p013, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1353 = fn (%p0313: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1229: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0313, %p1229, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1354 = %1353(%1324, meta[relay.Constant][196] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1355 = fn (%p0312: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1228: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %1347 = reshape(%p0312, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1348 = squeeze(%1347, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1349 = add(%1348, %p1228) /* ty=Tensor[(1, 128, 768), float16] */;
    %1350 = reshape(%1349, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1351 = transpose(%1350, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1352 = broadcast_to(%1351, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%1352, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1356 = %1346(%1345) /* ty=Tensor[(12, 128, 128), float16] */;
  %1357 = %1355(%1354, meta[relay.Constant][197] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1358 = fn (%p012: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p19: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p012, %p19, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1359 = %1358(%1356, %1357) /* ty=Tensor[(12, 128, 64), float16] */;
  %1360 = fn (%p011: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %36 = reshape(%p011, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %37 = squeeze(%36, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %38 = transpose(%37, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %39 = reshape(%38, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %40 = broadcast_to(%39, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%40, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1361 = %1360(%1359) /* ty=Tensor[(1, 128, 768), float16] */;
  %1362 = fn (%p010: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p18: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p010, %p18, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1363 = %1362(%1361, meta[relay.Constant][198] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1364 = fn (%p09: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p17: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p24: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %33 = reshape(%p09, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %34 = squeeze(%33, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %35 = add(%34, %p17) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p24, %35) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1365 = %1364(%1363, meta[relay.Constant][199] /* ty=Tensor[(768), float16] */, %1316) /* ty=Tensor[(1, 128, 768), float16] */;
  %1366 = fn (%p08: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p08, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1367 = %1366(%1365) /* ty=Tensor[(1, 128, 768), float32] */;
  %1368 = fn (%p0314: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0314, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1369 = %1368(%1367) /* ty=Tensor[(1, 128, 1), float32] */;
  %1370 = fn (%p0315: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1230: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0315, %p1230, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1371 = %1370(%1367, %1369) /* ty=Tensor[(1, 128, 1), float32] */;
  %1372 = fn (%p07: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p16: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p23: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p31: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p41: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %25 = add(%p23, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %26 = subtract(%p07, %p16) /* ty=Tensor[(1, 128, 768), float32] */;
    %27 = sqrt(%25) /* ty=Tensor[(1, 128, 1), float32] */;
    %28 = divide(%26, %27) /* ty=Tensor[(1, 128, 768), float32] */;
    %29 = multiply(%28, %p31) /* ty=Tensor[(1, 128, 768), float32] */;
    %30 = add(%29, %p41) /* ty=Tensor[(1, 128, 768), float32] */;
    %31 = broadcast_to(%30, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %32 = reshape(%31, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%32, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %1373 = %1372(%1367, %1369, %1371, meta[relay.Constant][200] /* ty=Tensor[(768), float32] */, meta[relay.Constant][201] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1374 = fn (%p06: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p15: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p06, %p15, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %1375 = %1374(%1373, meta[relay.Constant][202] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1376 = fn (%p05: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p14: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p22: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %13 = reshape(%p05, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %14 = squeeze(%13, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %15 = add(%14, %p14) /* ty=Tensor[(1, 128, 3072), float16] */;
    %16 = multiply(%15, %p22) /* ty=Tensor[(1, 128, 3072), float16] */;
    %17 = cast(%16, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %18 = erf(%17) /* ty=Tensor[(1, 128, 3072), float32] */;
    %19 = multiply(%18, 0.5f /* ty=float32 */) /* ty=Tensor[(1, 128, 3072), float32] */;
    %20 = cast(%15, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %21 = add(0.5f /* ty=float32 */, %19) /* ty=Tensor[(1, 128, 3072), float32] */;
    %22 = multiply(%20, %21) /* ty=Tensor[(1, 128, 3072), float32] */;
    %23 = broadcast_to(%22, shape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    %24 = reshape(%23, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float32] */;
    cast(%24, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16) -> Tensor[(1, 128, 3072), float16] */;
  %1377 = %1376(%1375, meta[relay.Constant][203] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1378 = fn (%p04: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p13: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p04, %p13, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1379 = %1378(%1377, meta[relay.Constant][204] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1380 = fn (%p03: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p12: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p21: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    %9 = reshape(%p03, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %10 = squeeze(%9, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %11 = add(%10, %p12) /* ty=Tensor[(1, 128, 768), float16] */;
    %12 = add(%p21, %11) /* ty=Tensor[(1, 128, 768), float16] */;
    cast(%12, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1381 = %1380(%1379, meta[relay.Constant][205] /* ty=Tensor[(768), float16] */, %1365) /* ty=Tensor[(1, 128, 768), float32] */;
  %1382 = fn (%p0316: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0316, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1383 = %1382(%1381) /* ty=Tensor[(1, 128, 1), float32] */;
  %1384 = fn (%p0317: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1231: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0317, %p1231, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1385 = %1384(%1381, %1383) /* ty=Tensor[(1, 128, 1), float32] */;
  %1386 = fn (%p02: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p11: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p2: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p3: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, %p4: Tensor[(768), float32] /* ty=Tensor[(768), float32] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %1 = add(%p2, 1e-05f /* ty=float32 */) /* ty=Tensor[(1, 128, 1), float32] */;
    %2 = subtract(%p02, %p11) /* ty=Tensor[(1, 128, 768), float32] */;
    %3 = sqrt(%1) /* ty=Tensor[(1, 128, 1), float32] */;
    %4 = divide(%2, %3) /* ty=Tensor[(1, 128, 768), float32] */;
    %5 = multiply(%4, %p3) /* ty=Tensor[(1, 128, 768), float32] */;
    %6 = add(%5, %p4) /* ty=Tensor[(1, 128, 768), float32] */;
    %7 = broadcast_to(%6, shape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    %8 = reshape(%7, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float32] */;
    cast(%8, dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32], Tensor[(1, 128, 1), float32], Tensor[(768), float32], Tensor[(768), float32]) -> Tensor[(1, 128, 768), float16] */;
  %1387 = %1386(%1381, %1383, %1385, meta[relay.Constant][206] /* ty=Tensor[(768), float32] */, meta[relay.Constant][207] /* ty=Tensor[(768), float32] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1388 = fn (%p01: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1: Tensor[(1, 768, 128), float16] /* ty=Tensor[(1, 768, 128), float16] */, Primitive=1) -> Tensor[(1, 128, 128), float16] {
    nn.batch_matmul(%p01, %p1, out_dtype="float16") /* ty=Tensor[(1, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 128), float16]) -> Tensor[(1, 128, 128), float16] */;
  %1389 = %1388(%1387, meta[relay.Constant][208] /* ty=Tensor[(1, 768, 128), float16] */) /* ty=Tensor[(1, 128, 128), float16] */;
  %1390 = fn (%p0: Tensor[(1, 128, 128), float16] /* ty=Tensor[(1, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(1, 128, 128), float16] {
    %0 = reshape(%p0, newshape=[1, 128, 128]) /* ty=Tensor[(1, 128, 128), float16] */;
    squeeze(%0, axis=[]) /* ty=Tensor[(1, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 128), float16]) -> Tensor[(1, 128, 128), float16] */;
  %1390(%1389) /* ty=Tensor[(1, 128, 128), float16] */
}


