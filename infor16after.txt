type List[A] {
  Cons(A, List[A]),
  Nil,
}

type Option[A] {
  Some(A),
  None,
}

type Tree[A] {
  Rose(A, List[Tree[A]]),
}

type tensor_float16_t {
  tensor_nil_float16,
  tensor0_float16(float16),
  tensor1_float16(Tensor[(?), float16]),
  tensor2_float16(Tensor[(?, ?), float16]),
  tensor3_float16(Tensor[(?, ?, ?), float16]),
  tensor4_float16(Tensor[(?, ?, ?, ?), float16]),
  tensor5_float16(Tensor[(?, ?, ?, ?, ?), float16]),
  tensor6_float16(Tensor[(?, ?, ?, ?, ?, ?), float16]),
}

type tensor_float32_t {
  tensor_nil_float32,
  tensor0_float32(float32),
  tensor1_float32(Tensor[(?), float32]),
  tensor2_float32(Tensor[(?, ?), float32]),
  tensor3_float32(Tensor[(?, ?, ?), float32]),
  tensor4_float32(Tensor[(?, ?, ?, ?), float32]),
  tensor5_float32(Tensor[(?, ?, ?, ?, ?), float32]),
  tensor6_float32(Tensor[(?, ?, ?, ?, ?, ?), float32]),
}

type tensor_float64_t {
  tensor_nil_float64,
  tensor0_float64(float64),
  tensor1_float64(Tensor[(?), float64]),
  tensor2_float64(Tensor[(?, ?), float64]),
  tensor3_float64(Tensor[(?, ?, ?), float64]),
  tensor4_float64(Tensor[(?, ?, ?, ?), float64]),
  tensor5_float64(Tensor[(?, ?, ?, ?, ?), float64]),
  tensor6_float64(Tensor[(?, ?, ?, ?, ?, ?), float64]),
}

type tensor_int16_t {
  tensor_nil_int16,
  tensor0_int16(int16),
  tensor1_int16(Tensor[(?), int16]),
  tensor2_int16(Tensor[(?, ?), int16]),
  tensor3_int16(Tensor[(?, ?, ?), int16]),
  tensor4_int16(Tensor[(?, ?, ?, ?), int16]),
  tensor5_int16(Tensor[(?, ?, ?, ?, ?), int16]),
  tensor6_int16(Tensor[(?, ?, ?, ?, ?, ?), int16]),
}

type tensor_int32_t {
  tensor_nil_int32,
  tensor0_int32(int32),
  tensor1_int32(Tensor[(?), int32]),
  tensor2_int32(Tensor[(?, ?), int32]),
  tensor3_int32(Tensor[(?, ?, ?), int32]),
  tensor4_int32(Tensor[(?, ?, ?, ?), int32]),
  tensor5_int32(Tensor[(?, ?, ?, ?, ?), int32]),
  tensor6_int32(Tensor[(?, ?, ?, ?, ?, ?), int32]),
}

type tensor_int64_t {
  tensor_nil_int64,
  tensor0_int64(int64),
  tensor1_int64(Tensor[(?), int64]),
  tensor2_int64(Tensor[(?, ?), int64]),
  tensor3_int64(Tensor[(?, ?, ?), int64]),
  tensor4_int64(Tensor[(?, ?, ?, ?), int64]),
  tensor5_int64(Tensor[(?, ?, ?, ?, ?), int64]),
  tensor6_int64(Tensor[(?, ?, ?, ?, ?, ?), int64]),
}

type tensor_int8_t {
  tensor_nil_int8,
  tensor0_int8(int8),
  tensor1_int8(Tensor[(?), int8]),
  tensor2_int8(Tensor[(?, ?), int8]),
  tensor3_int8(Tensor[(?, ?, ?), int8]),
  tensor4_int8(Tensor[(?, ?, ?, ?), int8]),
  tensor5_int8(Tensor[(?, ?, ?, ?, ?), int8]),
  tensor6_int8(Tensor[(?, ?, ?, ?, ?, ?), int8]),
}

type tensor_uint16_t {
  tensor_nil_uint16,
  tensor0_uint16(uint16),
  tensor1_uint16(Tensor[(?), uint16]),
  tensor2_uint16(Tensor[(?, ?), uint16]),
  tensor3_uint16(Tensor[(?, ?, ?), uint16]),
  tensor4_uint16(Tensor[(?, ?, ?, ?), uint16]),
  tensor5_uint16(Tensor[(?, ?, ?, ?, ?), uint16]),
  tensor6_uint16(Tensor[(?, ?, ?, ?, ?, ?), uint16]),
}

type tensor_uint8_t {
  tensor_nil_uint8,
  tensor0_uint8(uint8),
  tensor1_uint8(Tensor[(?), uint8]),
  tensor2_uint8(Tensor[(?, ?), uint8]),
  tensor3_uint8(Tensor[(?, ?, ?), uint8]),
  tensor4_uint8(Tensor[(?, ?, ?, ?), uint8]),
  tensor5_uint8(Tensor[(?, ?, ?, ?, ?), uint8]),
  tensor6_uint8(Tensor[(?, ?, ?, ?, ?, ?), uint8]),
}

def @main(%idx: Tensor[(1, 128), int64] /* ty=Tensor[(1, 128), int64] */) -> Tensor[(1, 128, 128), float16] {
  %612 = fn (%p0245: Tensor[(1, 128), int64] /* ty=Tensor[(1, 128), int64] */, %p1158: Tensor[(128, 768), float16] /* ty=Tensor[(128, 768), float16] */, %p273: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %610 = cast(%p0245, dtype="int32") /* ty=Tensor[(1, 128), int32] */;
    %611 = take(%p1158, %610, axis=0) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%611, %p273) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128), int64], Tensor[(128, 768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %613 = %612(%idx, meta[relay.Constant][0] /* ty=Tensor[(128, 768), float16] */, meta[relay.Constant][1] /* ty=Tensor[(1, 128, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %614 = fn (%p0244: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0244, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %615 = %614(%613) /* ty=Tensor[(1, 128, 768), float32] */;
  %616 = fn (%p0243: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0243, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %617 = %616(%615) /* ty=Tensor[(1, 128, 1), float32] */;
  %618 = fn (%p0246: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1159: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0246, %p1159, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %619 = %618(%615, %617) /* ty=Tensor[(1, 128, 1), float32] */;
  %620 = fn (%p0242: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p1157: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p272: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p348: float16 /* ty=float16 */, %p424: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p524: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %601 = cast(%p0242, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %602 = cast(%p272, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %603 = add(%602, %p348) /* ty=Tensor[(1, 128, 1), float16] */;
    %604 = subtract(%p1157, %601) /* ty=Tensor[(1, 128, 768), float16] */;
    %605 = sqrt(%603) /* ty=Tensor[(1, 128, 1), float16] */;
    %606 = divide(%604, %605) /* ty=Tensor[(1, 128, 768), float16] */;
    %607 = multiply(%606, %p424) /* ty=Tensor[(1, 128, 768), float16] */;
    %608 = add(%607, %p524) /* ty=Tensor[(1, 128, 768), float16] */;
    %609 = broadcast_to(%608, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%609, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %621 = %620(%617, %613, %619, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][2] /* ty=Tensor[(768), float16] */, meta[relay.Constant][3] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %622 = fn (%p0241: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1156: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0241, %p1156, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %623 = %622(%621, meta[relay.Constant][4] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %624 = fn (%p0240: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1155: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %595 = reshape(%p0240, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %596 = squeeze(%595, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %597 = add(%596, %p1155) /* ty=Tensor[(1, 128, 768), float16] */;
    %598 = reshape(%597, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %599 = transpose(%598, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %600 = broadcast_to(%599, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%600, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %632 = fn (%p0248: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1161: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0248, %p1161, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %633 = %632(%621, meta[relay.Constant][6] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %634 = fn (%p0247: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1160: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %625 = reshape(%p0247, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %626 = squeeze(%625, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %627 = add(%626, %p1160) /* ty=Tensor[(1, 128, 768), float16] */;
    %628 = reshape(%627, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %629 = transpose(%628, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %630 = transpose(%629, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %631 = broadcast_to(%630, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%631, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %635 = %624(%623, meta[relay.Constant][5] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %636 = %634(%633, meta[relay.Constant][7] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %637 = fn (%p0239: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p1154: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p0239, %p1154, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %638 = %637(%635, %636) /* ty=Tensor[(12, 128, 128), float16] */;
  %639 = fn (%p0238: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1153: float16 /* ty=float16 */, %p271: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p347: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %592 = reshape(%p0238, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %593 = squeeze(%592, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %594 = multiply(%593, %p1153) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p271, %p347, %594) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %640 = %639(%638, 0.125f16 /* ty=float16 */, meta[relay.Constant][8] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %641 = fn (%p0237: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %591 = nn.softmax(%p0237) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%591, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %642 = %641(%640) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %643 = fn (%p0236: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p0236, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %650 = fn (%p0250: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1163: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0250, %p1163, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %651 = %650(%621, meta[relay.Constant][9] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %652 = fn (%p0249: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1162: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %644 = reshape(%p0249, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %645 = squeeze(%644, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %646 = add(%645, %p1162) /* ty=Tensor[(1, 128, 768), float16] */;
    %647 = reshape(%646, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %648 = transpose(%647, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %649 = broadcast_to(%648, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%649, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %653 = %643(%642) /* ty=Tensor[(12, 128, 128), float16] */;
  %654 = %652(%651, meta[relay.Constant][10] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %655 = fn (%p0235: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1152: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p0235, %p1152, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %656 = %655(%653, %654) /* ty=Tensor[(12, 128, 64), float16] */;
  %657 = fn (%p0234: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %586 = reshape(%p0234, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %587 = squeeze(%586, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %588 = transpose(%587, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %589 = reshape(%588, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %590 = broadcast_to(%589, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%590, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %658 = %657(%656) /* ty=Tensor[(1, 128, 768), float16] */;
  %659 = fn (%p0233: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1151: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0233, %p1151, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %660 = %659(%658, meta[relay.Constant][11] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %661 = fn (%p0232: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1150: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p270: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %583 = reshape(%p0232, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %584 = squeeze(%583, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %585 = add(%584, %p1150) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p270, %585) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %662 = %661(%660, meta[relay.Constant][12] /* ty=Tensor[(768), float16] */, %613) /* ty=Tensor[(1, 128, 768), float16] */;
  %663 = fn (%p0231: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0231, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %664 = %663(%662) /* ty=Tensor[(1, 128, 768), float32] */;
  %665 = fn (%p0230: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0230, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %666 = %665(%664) /* ty=Tensor[(1, 128, 1), float32] */;
  %667 = fn (%p0251: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1164: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0251, %p1164, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %668 = %667(%664, %666) /* ty=Tensor[(1, 128, 1), float32] */;
  %669 = fn (%p0229: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p1149: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p269: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p346: float16 /* ty=float16 */, %p423: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p523: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %574 = cast(%p0229, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %575 = cast(%p269, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %576 = add(%575, %p346) /* ty=Tensor[(1, 128, 1), float16] */;
    %577 = subtract(%p1149, %574) /* ty=Tensor[(1, 128, 768), float16] */;
    %578 = sqrt(%576) /* ty=Tensor[(1, 128, 1), float16] */;
    %579 = divide(%577, %578) /* ty=Tensor[(1, 128, 768), float16] */;
    %580 = multiply(%579, %p423) /* ty=Tensor[(1, 128, 768), float16] */;
    %581 = add(%580, %p523) /* ty=Tensor[(1, 128, 768), float16] */;
    %582 = broadcast_to(%581, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%582, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %670 = %669(%666, %662, %668, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][13] /* ty=Tensor[(768), float16] */, meta[relay.Constant][14] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %671 = fn (%p0228: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1148: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p0228, %p1148, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %672 = %671(%670, meta[relay.Constant][15] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %673 = fn (%p0227: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p1147: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p268: float16 /* ty=float16 */, %p345: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %563 = reshape(%p0227, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %564 = squeeze(%563, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %565 = add(%564, %p1147) /* ty=Tensor[(1, 128, 3072), float16] */;
    %566 = multiply(%565, %p268) /* ty=Tensor[(1, 128, 3072), float16] */;
    %567 = cast(%566, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %568 = erf(%567) /* ty=Tensor[(1, 128, 3072), float32] */;
    %569 = cast(%568, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    %570 = multiply(%569, %p345) /* ty=Tensor[(1, 128, 3072), float16] */;
    %571 = add(%p345, %570) /* ty=Tensor[(1, 128, 3072), float16] */;
    %572 = multiply(%565, %571) /* ty=Tensor[(1, 128, 3072), float16] */;
    %573 = broadcast_to(%572, shape=[1, 128, 3072], dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    reshape(%573, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16, float16) -> Tensor[(1, 128, 3072), float16] */;
  %674 = %673(%672, meta[relay.Constant][16] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %675 = fn (%p0226: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p1146: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0226, %p1146, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %676 = %675(%674, meta[relay.Constant][17] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %677 = fn (%p0225: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1145: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p267: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %560 = reshape(%p0225, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %561 = squeeze(%560, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %562 = add(%561, %p1145) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p267, %562) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %678 = %677(%676, meta[relay.Constant][18] /* ty=Tensor[(768), float16] */, %662) /* ty=Tensor[(1, 128, 768), float16] */;
  %679 = fn (%p0224: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0224, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %680 = %679(%678) /* ty=Tensor[(1, 128, 768), float32] */;
  %681 = fn (%p0223: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0223, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %682 = %681(%680) /* ty=Tensor[(1, 128, 1), float32] */;
  %683 = fn (%p0252: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1165: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0252, %p1165, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %684 = %683(%680, %682) /* ty=Tensor[(1, 128, 1), float32] */;
  %685 = fn (%p0222: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p1144: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p266: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p344: float16 /* ty=float16 */, %p422: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p522: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %551 = cast(%p0222, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %552 = cast(%p266, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %553 = add(%552, %p344) /* ty=Tensor[(1, 128, 1), float16] */;
    %554 = subtract(%p1144, %551) /* ty=Tensor[(1, 128, 768), float16] */;
    %555 = sqrt(%553) /* ty=Tensor[(1, 128, 1), float16] */;
    %556 = divide(%554, %555) /* ty=Tensor[(1, 128, 768), float16] */;
    %557 = multiply(%556, %p422) /* ty=Tensor[(1, 128, 768), float16] */;
    %558 = add(%557, %p522) /* ty=Tensor[(1, 128, 768), float16] */;
    %559 = broadcast_to(%558, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%559, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %686 = %685(%682, %678, %684, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][19] /* ty=Tensor[(768), float16] */, meta[relay.Constant][20] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %687 = fn (%p0221: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1143: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0221, %p1143, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %688 = %687(%686, meta[relay.Constant][21] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %689 = fn (%p0220: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1142: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %545 = reshape(%p0220, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %546 = squeeze(%545, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %547 = add(%546, %p1142) /* ty=Tensor[(1, 128, 768), float16] */;
    %548 = reshape(%547, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %549 = transpose(%548, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %550 = broadcast_to(%549, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%550, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %697 = fn (%p0254: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1167: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0254, %p1167, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %698 = %697(%686, meta[relay.Constant][23] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %699 = fn (%p0253: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1166: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %690 = reshape(%p0253, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %691 = squeeze(%690, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %692 = add(%691, %p1166) /* ty=Tensor[(1, 128, 768), float16] */;
    %693 = reshape(%692, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %694 = transpose(%693, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %695 = transpose(%694, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %696 = broadcast_to(%695, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%696, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %700 = %689(%688, meta[relay.Constant][22] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %701 = %699(%698, meta[relay.Constant][24] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %702 = fn (%p0219: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p1141: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p0219, %p1141, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %703 = %702(%700, %701) /* ty=Tensor[(12, 128, 128), float16] */;
  %704 = fn (%p0218: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1140: float16 /* ty=float16 */, %p265: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p343: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %542 = reshape(%p0218, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %543 = squeeze(%542, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %544 = multiply(%543, %p1140) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p265, %p343, %544) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %705 = %704(%703, 0.125f16 /* ty=float16 */, meta[relay.Constant][25] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %706 = fn (%p0217: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %541 = nn.softmax(%p0217) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%541, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %707 = %706(%705) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %708 = fn (%p0216: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p0216, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %715 = fn (%p0256: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1169: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0256, %p1169, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %716 = %715(%686, meta[relay.Constant][26] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %717 = fn (%p0255: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1168: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %709 = reshape(%p0255, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %710 = squeeze(%709, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %711 = add(%710, %p1168) /* ty=Tensor[(1, 128, 768), float16] */;
    %712 = reshape(%711, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %713 = transpose(%712, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %714 = broadcast_to(%713, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%714, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %718 = %708(%707) /* ty=Tensor[(12, 128, 128), float16] */;
  %719 = %717(%716, meta[relay.Constant][27] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %720 = fn (%p0215: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1139: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p0215, %p1139, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %721 = %720(%718, %719) /* ty=Tensor[(12, 128, 64), float16] */;
  %722 = fn (%p0214: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %536 = reshape(%p0214, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %537 = squeeze(%536, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %538 = transpose(%537, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %539 = reshape(%538, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %540 = broadcast_to(%539, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%540, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %723 = %722(%721) /* ty=Tensor[(1, 128, 768), float16] */;
  %724 = fn (%p0213: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1138: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0213, %p1138, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %725 = %724(%723, meta[relay.Constant][28] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %726 = fn (%p0212: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1137: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p264: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %533 = reshape(%p0212, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %534 = squeeze(%533, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %535 = add(%534, %p1137) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p264, %535) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %727 = %726(%725, meta[relay.Constant][29] /* ty=Tensor[(768), float16] */, %678) /* ty=Tensor[(1, 128, 768), float16] */;
  %728 = fn (%p0211: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0211, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %729 = %728(%727) /* ty=Tensor[(1, 128, 768), float32] */;
  %730 = fn (%p0210: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0210, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %731 = %730(%729) /* ty=Tensor[(1, 128, 1), float32] */;
  %732 = fn (%p0257: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1170: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0257, %p1170, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %733 = %732(%729, %731) /* ty=Tensor[(1, 128, 1), float32] */;
  %734 = fn (%p0209: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p1136: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p263: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p342: float16 /* ty=float16 */, %p421: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p521: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %524 = cast(%p0209, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %525 = cast(%p263, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %526 = add(%525, %p342) /* ty=Tensor[(1, 128, 1), float16] */;
    %527 = subtract(%p1136, %524) /* ty=Tensor[(1, 128, 768), float16] */;
    %528 = sqrt(%526) /* ty=Tensor[(1, 128, 1), float16] */;
    %529 = divide(%527, %528) /* ty=Tensor[(1, 128, 768), float16] */;
    %530 = multiply(%529, %p421) /* ty=Tensor[(1, 128, 768), float16] */;
    %531 = add(%530, %p521) /* ty=Tensor[(1, 128, 768), float16] */;
    %532 = broadcast_to(%531, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%532, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %735 = %734(%731, %727, %733, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][30] /* ty=Tensor[(768), float16] */, meta[relay.Constant][31] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %736 = fn (%p0208: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1135: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p0208, %p1135, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %737 = %736(%735, meta[relay.Constant][32] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %738 = fn (%p0207: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p1134: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p262: float16 /* ty=float16 */, %p341: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %513 = reshape(%p0207, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %514 = squeeze(%513, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %515 = add(%514, %p1134) /* ty=Tensor[(1, 128, 3072), float16] */;
    %516 = multiply(%515, %p262) /* ty=Tensor[(1, 128, 3072), float16] */;
    %517 = cast(%516, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %518 = erf(%517) /* ty=Tensor[(1, 128, 3072), float32] */;
    %519 = cast(%518, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    %520 = multiply(%519, %p341) /* ty=Tensor[(1, 128, 3072), float16] */;
    %521 = add(%p341, %520) /* ty=Tensor[(1, 128, 3072), float16] */;
    %522 = multiply(%515, %521) /* ty=Tensor[(1, 128, 3072), float16] */;
    %523 = broadcast_to(%522, shape=[1, 128, 3072], dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    reshape(%523, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16, float16) -> Tensor[(1, 128, 3072), float16] */;
  %739 = %738(%737, meta[relay.Constant][33] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %740 = fn (%p0206: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p1133: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0206, %p1133, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %741 = %740(%739, meta[relay.Constant][34] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %742 = fn (%p0205: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1132: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p261: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %510 = reshape(%p0205, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %511 = squeeze(%510, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %512 = add(%511, %p1132) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p261, %512) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %743 = %742(%741, meta[relay.Constant][35] /* ty=Tensor[(768), float16] */, %727) /* ty=Tensor[(1, 128, 768), float16] */;
  %744 = fn (%p0204: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0204, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %745 = %744(%743) /* ty=Tensor[(1, 128, 768), float32] */;
  %746 = fn (%p0203: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0203, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %747 = %746(%745) /* ty=Tensor[(1, 128, 1), float32] */;
  %748 = fn (%p0258: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1171: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0258, %p1171, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %749 = %748(%745, %747) /* ty=Tensor[(1, 128, 1), float32] */;
  %750 = fn (%p0202: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p1131: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p260: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p340: float16 /* ty=float16 */, %p420: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p520: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %501 = cast(%p0202, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %502 = cast(%p260, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %503 = add(%502, %p340) /* ty=Tensor[(1, 128, 1), float16] */;
    %504 = subtract(%p1131, %501) /* ty=Tensor[(1, 128, 768), float16] */;
    %505 = sqrt(%503) /* ty=Tensor[(1, 128, 1), float16] */;
    %506 = divide(%504, %505) /* ty=Tensor[(1, 128, 768), float16] */;
    %507 = multiply(%506, %p420) /* ty=Tensor[(1, 128, 768), float16] */;
    %508 = add(%507, %p520) /* ty=Tensor[(1, 128, 768), float16] */;
    %509 = broadcast_to(%508, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%509, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %751 = %750(%747, %743, %749, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][36] /* ty=Tensor[(768), float16] */, meta[relay.Constant][37] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %752 = fn (%p0201: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1130: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0201, %p1130, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %753 = %752(%751, meta[relay.Constant][38] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %754 = fn (%p0200: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1129: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %495 = reshape(%p0200, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %496 = squeeze(%495, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %497 = add(%496, %p1129) /* ty=Tensor[(1, 128, 768), float16] */;
    %498 = reshape(%497, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %499 = transpose(%498, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %500 = broadcast_to(%499, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%500, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %762 = fn (%p0260: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1173: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0260, %p1173, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %763 = %762(%751, meta[relay.Constant][40] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %764 = fn (%p0259: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1172: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %755 = reshape(%p0259, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %756 = squeeze(%755, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %757 = add(%756, %p1172) /* ty=Tensor[(1, 128, 768), float16] */;
    %758 = reshape(%757, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %759 = transpose(%758, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %760 = transpose(%759, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %761 = broadcast_to(%760, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%761, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %765 = %754(%753, meta[relay.Constant][39] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %766 = %764(%763, meta[relay.Constant][41] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %767 = fn (%p0199: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p1128: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p0199, %p1128, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %768 = %767(%765, %766) /* ty=Tensor[(12, 128, 128), float16] */;
  %769 = fn (%p0198: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1127: float16 /* ty=float16 */, %p259: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p339: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %492 = reshape(%p0198, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %493 = squeeze(%492, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %494 = multiply(%493, %p1127) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p259, %p339, %494) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %770 = %769(%768, 0.125f16 /* ty=float16 */, meta[relay.Constant][42] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %771 = fn (%p0197: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %491 = nn.softmax(%p0197) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%491, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %772 = %771(%770) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %773 = fn (%p0196: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p0196, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %780 = fn (%p0262: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1175: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0262, %p1175, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %781 = %780(%751, meta[relay.Constant][43] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %782 = fn (%p0261: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1174: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %774 = reshape(%p0261, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %775 = squeeze(%774, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %776 = add(%775, %p1174) /* ty=Tensor[(1, 128, 768), float16] */;
    %777 = reshape(%776, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %778 = transpose(%777, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %779 = broadcast_to(%778, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%779, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %783 = %773(%772) /* ty=Tensor[(12, 128, 128), float16] */;
  %784 = %782(%781, meta[relay.Constant][44] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %785 = fn (%p0195: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1126: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p0195, %p1126, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %786 = %785(%783, %784) /* ty=Tensor[(12, 128, 64), float16] */;
  %787 = fn (%p0194: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %486 = reshape(%p0194, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %487 = squeeze(%486, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %488 = transpose(%487, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %489 = reshape(%488, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %490 = broadcast_to(%489, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%490, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %788 = %787(%786) /* ty=Tensor[(1, 128, 768), float16] */;
  %789 = fn (%p0193: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1125: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0193, %p1125, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %790 = %789(%788, meta[relay.Constant][45] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %791 = fn (%p0192: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1124: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p258: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %483 = reshape(%p0192, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %484 = squeeze(%483, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %485 = add(%484, %p1124) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p258, %485) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %792 = %791(%790, meta[relay.Constant][46] /* ty=Tensor[(768), float16] */, %743) /* ty=Tensor[(1, 128, 768), float16] */;
  %793 = fn (%p0191: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0191, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %794 = %793(%792) /* ty=Tensor[(1, 128, 768), float32] */;
  %795 = fn (%p0190: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0190, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %796 = %795(%794) /* ty=Tensor[(1, 128, 1), float32] */;
  %797 = fn (%p0263: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1176: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0263, %p1176, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %798 = %797(%794, %796) /* ty=Tensor[(1, 128, 1), float32] */;
  %799 = fn (%p0189: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p1123: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p257: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p338: float16 /* ty=float16 */, %p419: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p519: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %474 = cast(%p0189, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %475 = cast(%p257, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %476 = add(%475, %p338) /* ty=Tensor[(1, 128, 1), float16] */;
    %477 = subtract(%p1123, %474) /* ty=Tensor[(1, 128, 768), float16] */;
    %478 = sqrt(%476) /* ty=Tensor[(1, 128, 1), float16] */;
    %479 = divide(%477, %478) /* ty=Tensor[(1, 128, 768), float16] */;
    %480 = multiply(%479, %p419) /* ty=Tensor[(1, 128, 768), float16] */;
    %481 = add(%480, %p519) /* ty=Tensor[(1, 128, 768), float16] */;
    %482 = broadcast_to(%481, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%482, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %800 = %799(%796, %792, %798, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][47] /* ty=Tensor[(768), float16] */, meta[relay.Constant][48] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %801 = fn (%p0188: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1122: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p0188, %p1122, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %802 = %801(%800, meta[relay.Constant][49] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %803 = fn (%p0187: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p1121: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p256: float16 /* ty=float16 */, %p337: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %463 = reshape(%p0187, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %464 = squeeze(%463, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %465 = add(%464, %p1121) /* ty=Tensor[(1, 128, 3072), float16] */;
    %466 = multiply(%465, %p256) /* ty=Tensor[(1, 128, 3072), float16] */;
    %467 = cast(%466, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %468 = erf(%467) /* ty=Tensor[(1, 128, 3072), float32] */;
    %469 = cast(%468, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    %470 = multiply(%469, %p337) /* ty=Tensor[(1, 128, 3072), float16] */;
    %471 = add(%p337, %470) /* ty=Tensor[(1, 128, 3072), float16] */;
    %472 = multiply(%465, %471) /* ty=Tensor[(1, 128, 3072), float16] */;
    %473 = broadcast_to(%472, shape=[1, 128, 3072], dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    reshape(%473, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16, float16) -> Tensor[(1, 128, 3072), float16] */;
  %804 = %803(%802, meta[relay.Constant][50] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %805 = fn (%p0186: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p1120: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0186, %p1120, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %806 = %805(%804, meta[relay.Constant][51] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %807 = fn (%p0185: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1119: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p255: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %460 = reshape(%p0185, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %461 = squeeze(%460, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %462 = add(%461, %p1119) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p255, %462) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %808 = %807(%806, meta[relay.Constant][52] /* ty=Tensor[(768), float16] */, %792) /* ty=Tensor[(1, 128, 768), float16] */;
  %809 = fn (%p0184: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0184, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %810 = %809(%808) /* ty=Tensor[(1, 128, 768), float32] */;
  %811 = fn (%p0183: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0183, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %812 = %811(%810) /* ty=Tensor[(1, 128, 1), float32] */;
  %813 = fn (%p0264: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1177: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0264, %p1177, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %814 = %813(%810, %812) /* ty=Tensor[(1, 128, 1), float32] */;
  %815 = fn (%p0182: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p1118: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p254: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p336: float16 /* ty=float16 */, %p418: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p518: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %451 = cast(%p0182, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %452 = cast(%p254, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %453 = add(%452, %p336) /* ty=Tensor[(1, 128, 1), float16] */;
    %454 = subtract(%p1118, %451) /* ty=Tensor[(1, 128, 768), float16] */;
    %455 = sqrt(%453) /* ty=Tensor[(1, 128, 1), float16] */;
    %456 = divide(%454, %455) /* ty=Tensor[(1, 128, 768), float16] */;
    %457 = multiply(%456, %p418) /* ty=Tensor[(1, 128, 768), float16] */;
    %458 = add(%457, %p518) /* ty=Tensor[(1, 128, 768), float16] */;
    %459 = broadcast_to(%458, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%459, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %816 = %815(%812, %808, %814, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][53] /* ty=Tensor[(768), float16] */, meta[relay.Constant][54] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %817 = fn (%p0181: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1117: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0181, %p1117, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %818 = %817(%816, meta[relay.Constant][55] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %819 = fn (%p0180: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1116: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %445 = reshape(%p0180, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %446 = squeeze(%445, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %447 = add(%446, %p1116) /* ty=Tensor[(1, 128, 768), float16] */;
    %448 = reshape(%447, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %449 = transpose(%448, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %450 = broadcast_to(%449, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%450, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %827 = fn (%p0266: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1179: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0266, %p1179, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %828 = %827(%816, meta[relay.Constant][57] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %829 = fn (%p0265: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1178: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %820 = reshape(%p0265, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %821 = squeeze(%820, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %822 = add(%821, %p1178) /* ty=Tensor[(1, 128, 768), float16] */;
    %823 = reshape(%822, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %824 = transpose(%823, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %825 = transpose(%824, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %826 = broadcast_to(%825, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%826, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %830 = %819(%818, meta[relay.Constant][56] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %831 = %829(%828, meta[relay.Constant][58] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %832 = fn (%p0179: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p1115: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p0179, %p1115, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %833 = %832(%830, %831) /* ty=Tensor[(12, 128, 128), float16] */;
  %834 = fn (%p0178: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1114: float16 /* ty=float16 */, %p253: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p335: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %442 = reshape(%p0178, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %443 = squeeze(%442, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %444 = multiply(%443, %p1114) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p253, %p335, %444) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %835 = %834(%833, 0.125f16 /* ty=float16 */, meta[relay.Constant][59] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %836 = fn (%p0177: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %441 = nn.softmax(%p0177) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%441, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %837 = %836(%835) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %838 = fn (%p0176: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p0176, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %845 = fn (%p0268: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1181: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0268, %p1181, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %846 = %845(%816, meta[relay.Constant][60] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %847 = fn (%p0267: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1180: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %839 = reshape(%p0267, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %840 = squeeze(%839, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %841 = add(%840, %p1180) /* ty=Tensor[(1, 128, 768), float16] */;
    %842 = reshape(%841, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %843 = transpose(%842, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %844 = broadcast_to(%843, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%844, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %848 = %838(%837) /* ty=Tensor[(12, 128, 128), float16] */;
  %849 = %847(%846, meta[relay.Constant][61] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %850 = fn (%p0175: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1113: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p0175, %p1113, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %851 = %850(%848, %849) /* ty=Tensor[(12, 128, 64), float16] */;
  %852 = fn (%p0174: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %436 = reshape(%p0174, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %437 = squeeze(%436, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %438 = transpose(%437, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %439 = reshape(%438, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %440 = broadcast_to(%439, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%440, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %853 = %852(%851) /* ty=Tensor[(1, 128, 768), float16] */;
  %854 = fn (%p0173: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1112: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0173, %p1112, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %855 = %854(%853, meta[relay.Constant][62] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %856 = fn (%p0172: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1111: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p252: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %433 = reshape(%p0172, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %434 = squeeze(%433, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %435 = add(%434, %p1111) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p252, %435) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %857 = %856(%855, meta[relay.Constant][63] /* ty=Tensor[(768), float16] */, %808) /* ty=Tensor[(1, 128, 768), float16] */;
  %858 = fn (%p0171: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0171, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %859 = %858(%857) /* ty=Tensor[(1, 128, 768), float32] */;
  %860 = fn (%p0170: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0170, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %861 = %860(%859) /* ty=Tensor[(1, 128, 1), float32] */;
  %862 = fn (%p0269: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1182: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0269, %p1182, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %863 = %862(%859, %861) /* ty=Tensor[(1, 128, 1), float32] */;
  %864 = fn (%p0169: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p1110: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p251: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p334: float16 /* ty=float16 */, %p417: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p517: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %424 = cast(%p0169, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %425 = cast(%p251, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %426 = add(%425, %p334) /* ty=Tensor[(1, 128, 1), float16] */;
    %427 = subtract(%p1110, %424) /* ty=Tensor[(1, 128, 768), float16] */;
    %428 = sqrt(%426) /* ty=Tensor[(1, 128, 1), float16] */;
    %429 = divide(%427, %428) /* ty=Tensor[(1, 128, 768), float16] */;
    %430 = multiply(%429, %p417) /* ty=Tensor[(1, 128, 768), float16] */;
    %431 = add(%430, %p517) /* ty=Tensor[(1, 128, 768), float16] */;
    %432 = broadcast_to(%431, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%432, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %865 = %864(%861, %857, %863, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][64] /* ty=Tensor[(768), float16] */, meta[relay.Constant][65] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %866 = fn (%p0168: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1109: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p0168, %p1109, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %867 = %866(%865, meta[relay.Constant][66] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %868 = fn (%p0167: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p1108: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p250: float16 /* ty=float16 */, %p333: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %413 = reshape(%p0167, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %414 = squeeze(%413, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %415 = add(%414, %p1108) /* ty=Tensor[(1, 128, 3072), float16] */;
    %416 = multiply(%415, %p250) /* ty=Tensor[(1, 128, 3072), float16] */;
    %417 = cast(%416, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %418 = erf(%417) /* ty=Tensor[(1, 128, 3072), float32] */;
    %419 = cast(%418, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    %420 = multiply(%419, %p333) /* ty=Tensor[(1, 128, 3072), float16] */;
    %421 = add(%p333, %420) /* ty=Tensor[(1, 128, 3072), float16] */;
    %422 = multiply(%415, %421) /* ty=Tensor[(1, 128, 3072), float16] */;
    %423 = broadcast_to(%422, shape=[1, 128, 3072], dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    reshape(%423, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16, float16) -> Tensor[(1, 128, 3072), float16] */;
  %869 = %868(%867, meta[relay.Constant][67] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %870 = fn (%p0166: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p1107: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0166, %p1107, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %871 = %870(%869, meta[relay.Constant][68] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %872 = fn (%p0165: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1106: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p249: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %410 = reshape(%p0165, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %411 = squeeze(%410, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %412 = add(%411, %p1106) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p249, %412) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %873 = %872(%871, meta[relay.Constant][69] /* ty=Tensor[(768), float16] */, %857) /* ty=Tensor[(1, 128, 768), float16] */;
  %874 = fn (%p0164: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0164, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %875 = %874(%873) /* ty=Tensor[(1, 128, 768), float32] */;
  %876 = fn (%p0163: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0163, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %877 = %876(%875) /* ty=Tensor[(1, 128, 1), float32] */;
  %878 = fn (%p0270: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1183: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0270, %p1183, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %879 = %878(%875, %877) /* ty=Tensor[(1, 128, 1), float32] */;
  %880 = fn (%p0162: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p1105: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p248: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p332: float16 /* ty=float16 */, %p416: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p516: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %401 = cast(%p0162, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %402 = cast(%p248, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %403 = add(%402, %p332) /* ty=Tensor[(1, 128, 1), float16] */;
    %404 = subtract(%p1105, %401) /* ty=Tensor[(1, 128, 768), float16] */;
    %405 = sqrt(%403) /* ty=Tensor[(1, 128, 1), float16] */;
    %406 = divide(%404, %405) /* ty=Tensor[(1, 128, 768), float16] */;
    %407 = multiply(%406, %p416) /* ty=Tensor[(1, 128, 768), float16] */;
    %408 = add(%407, %p516) /* ty=Tensor[(1, 128, 768), float16] */;
    %409 = broadcast_to(%408, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%409, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %881 = %880(%877, %873, %879, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][70] /* ty=Tensor[(768), float16] */, meta[relay.Constant][71] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %882 = fn (%p0161: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1104: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0161, %p1104, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %883 = %882(%881, meta[relay.Constant][72] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %884 = fn (%p0160: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1103: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %395 = reshape(%p0160, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %396 = squeeze(%395, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %397 = add(%396, %p1103) /* ty=Tensor[(1, 128, 768), float16] */;
    %398 = reshape(%397, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %399 = transpose(%398, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %400 = broadcast_to(%399, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%400, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %892 = fn (%p0272: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1185: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0272, %p1185, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %893 = %892(%881, meta[relay.Constant][74] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %894 = fn (%p0271: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1184: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %885 = reshape(%p0271, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %886 = squeeze(%885, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %887 = add(%886, %p1184) /* ty=Tensor[(1, 128, 768), float16] */;
    %888 = reshape(%887, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %889 = transpose(%888, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %890 = transpose(%889, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %891 = broadcast_to(%890, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%891, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %895 = %884(%883, meta[relay.Constant][73] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %896 = %894(%893, meta[relay.Constant][75] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %897 = fn (%p0159: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p1102: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p0159, %p1102, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %898 = %897(%895, %896) /* ty=Tensor[(12, 128, 128), float16] */;
  %899 = fn (%p0158: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1101: float16 /* ty=float16 */, %p247: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p331: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %392 = reshape(%p0158, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %393 = squeeze(%392, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %394 = multiply(%393, %p1101) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p247, %p331, %394) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %900 = %899(%898, 0.125f16 /* ty=float16 */, meta[relay.Constant][76] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %901 = fn (%p0157: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %391 = nn.softmax(%p0157) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%391, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %902 = %901(%900) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %903 = fn (%p0156: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p0156, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %910 = fn (%p0274: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1187: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0274, %p1187, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %911 = %910(%881, meta[relay.Constant][77] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %912 = fn (%p0273: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1186: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %904 = reshape(%p0273, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %905 = squeeze(%904, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %906 = add(%905, %p1186) /* ty=Tensor[(1, 128, 768), float16] */;
    %907 = reshape(%906, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %908 = transpose(%907, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %909 = broadcast_to(%908, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%909, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %913 = %903(%902) /* ty=Tensor[(12, 128, 128), float16] */;
  %914 = %912(%911, meta[relay.Constant][78] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %915 = fn (%p0155: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p1100: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p0155, %p1100, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %916 = %915(%913, %914) /* ty=Tensor[(12, 128, 64), float16] */;
  %917 = fn (%p0154: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %386 = reshape(%p0154, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %387 = squeeze(%386, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %388 = transpose(%387, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %389 = reshape(%388, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %390 = broadcast_to(%389, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%390, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %918 = %917(%916) /* ty=Tensor[(1, 128, 768), float16] */;
  %919 = fn (%p0153: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p199: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0153, %p199, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %920 = %919(%918, meta[relay.Constant][79] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %921 = fn (%p0152: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p198: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p246: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %383 = reshape(%p0152, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %384 = squeeze(%383, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %385 = add(%384, %p198) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p246, %385) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %922 = %921(%920, meta[relay.Constant][80] /* ty=Tensor[(768), float16] */, %873) /* ty=Tensor[(1, 128, 768), float16] */;
  %923 = fn (%p0151: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0151, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %924 = %923(%922) /* ty=Tensor[(1, 128, 768), float32] */;
  %925 = fn (%p0150: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0150, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %926 = %925(%924) /* ty=Tensor[(1, 128, 1), float32] */;
  %927 = fn (%p0275: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1188: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0275, %p1188, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %928 = %927(%924, %926) /* ty=Tensor[(1, 128, 1), float32] */;
  %929 = fn (%p0149: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p197: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p245: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p330: float16 /* ty=float16 */, %p415: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p515: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %374 = cast(%p0149, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %375 = cast(%p245, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %376 = add(%375, %p330) /* ty=Tensor[(1, 128, 1), float16] */;
    %377 = subtract(%p197, %374) /* ty=Tensor[(1, 128, 768), float16] */;
    %378 = sqrt(%376) /* ty=Tensor[(1, 128, 1), float16] */;
    %379 = divide(%377, %378) /* ty=Tensor[(1, 128, 768), float16] */;
    %380 = multiply(%379, %p415) /* ty=Tensor[(1, 128, 768), float16] */;
    %381 = add(%380, %p515) /* ty=Tensor[(1, 128, 768), float16] */;
    %382 = broadcast_to(%381, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%382, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %930 = %929(%926, %922, %928, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][81] /* ty=Tensor[(768), float16] */, meta[relay.Constant][82] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %931 = fn (%p0148: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p196: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p0148, %p196, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %932 = %931(%930, meta[relay.Constant][83] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %933 = fn (%p0147: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p195: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p244: float16 /* ty=float16 */, %p329: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %363 = reshape(%p0147, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %364 = squeeze(%363, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %365 = add(%364, %p195) /* ty=Tensor[(1, 128, 3072), float16] */;
    %366 = multiply(%365, %p244) /* ty=Tensor[(1, 128, 3072), float16] */;
    %367 = cast(%366, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %368 = erf(%367) /* ty=Tensor[(1, 128, 3072), float32] */;
    %369 = cast(%368, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    %370 = multiply(%369, %p329) /* ty=Tensor[(1, 128, 3072), float16] */;
    %371 = add(%p329, %370) /* ty=Tensor[(1, 128, 3072), float16] */;
    %372 = multiply(%365, %371) /* ty=Tensor[(1, 128, 3072), float16] */;
    %373 = broadcast_to(%372, shape=[1, 128, 3072], dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    reshape(%373, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16, float16) -> Tensor[(1, 128, 3072), float16] */;
  %934 = %933(%932, meta[relay.Constant][84] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %935 = fn (%p0146: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p194: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0146, %p194, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %936 = %935(%934, meta[relay.Constant][85] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %937 = fn (%p0145: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p193: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p243: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %360 = reshape(%p0145, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %361 = squeeze(%360, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %362 = add(%361, %p193) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p243, %362) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %938 = %937(%936, meta[relay.Constant][86] /* ty=Tensor[(768), float16] */, %922) /* ty=Tensor[(1, 128, 768), float16] */;
  %939 = fn (%p0144: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0144, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %940 = %939(%938) /* ty=Tensor[(1, 128, 768), float32] */;
  %941 = fn (%p0143: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0143, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %942 = %941(%940) /* ty=Tensor[(1, 128, 1), float32] */;
  %943 = fn (%p0276: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1189: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0276, %p1189, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %944 = %943(%940, %942) /* ty=Tensor[(1, 128, 1), float32] */;
  %945 = fn (%p0142: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p192: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p242: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p328: float16 /* ty=float16 */, %p414: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p514: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %351 = cast(%p0142, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %352 = cast(%p242, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %353 = add(%352, %p328) /* ty=Tensor[(1, 128, 1), float16] */;
    %354 = subtract(%p192, %351) /* ty=Tensor[(1, 128, 768), float16] */;
    %355 = sqrt(%353) /* ty=Tensor[(1, 128, 1), float16] */;
    %356 = divide(%354, %355) /* ty=Tensor[(1, 128, 768), float16] */;
    %357 = multiply(%356, %p414) /* ty=Tensor[(1, 128, 768), float16] */;
    %358 = add(%357, %p514) /* ty=Tensor[(1, 128, 768), float16] */;
    %359 = broadcast_to(%358, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%359, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %946 = %945(%942, %938, %944, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][87] /* ty=Tensor[(768), float16] */, meta[relay.Constant][88] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %947 = fn (%p0141: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p191: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0141, %p191, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %948 = %947(%946, meta[relay.Constant][89] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %949 = fn (%p0140: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p190: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %345 = reshape(%p0140, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %346 = squeeze(%345, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %347 = add(%346, %p190) /* ty=Tensor[(1, 128, 768), float16] */;
    %348 = reshape(%347, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %349 = transpose(%348, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %350 = broadcast_to(%349, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%350, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %957 = fn (%p0278: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1191: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0278, %p1191, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %958 = %957(%946, meta[relay.Constant][91] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %959 = fn (%p0277: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1190: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %950 = reshape(%p0277, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %951 = squeeze(%950, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %952 = add(%951, %p1190) /* ty=Tensor[(1, 128, 768), float16] */;
    %953 = reshape(%952, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %954 = transpose(%953, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %955 = transpose(%954, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %956 = broadcast_to(%955, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%956, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %960 = %949(%948, meta[relay.Constant][90] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %961 = %959(%958, meta[relay.Constant][92] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %962 = fn (%p0139: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p189: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p0139, %p189, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %963 = %962(%960, %961) /* ty=Tensor[(12, 128, 128), float16] */;
  %964 = fn (%p0138: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p188: float16 /* ty=float16 */, %p241: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p327: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %342 = reshape(%p0138, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %343 = squeeze(%342, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %344 = multiply(%343, %p188) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p241, %p327, %344) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %965 = %964(%963, 0.125f16 /* ty=float16 */, meta[relay.Constant][93] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %966 = fn (%p0137: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %341 = nn.softmax(%p0137) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%341, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %967 = %966(%965) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %968 = fn (%p0136: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p0136, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %975 = fn (%p0280: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1193: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0280, %p1193, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %976 = %975(%946, meta[relay.Constant][94] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %977 = fn (%p0279: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1192: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %969 = reshape(%p0279, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %970 = squeeze(%969, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %971 = add(%970, %p1192) /* ty=Tensor[(1, 128, 768), float16] */;
    %972 = reshape(%971, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %973 = transpose(%972, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %974 = broadcast_to(%973, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%974, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %978 = %968(%967) /* ty=Tensor[(12, 128, 128), float16] */;
  %979 = %977(%976, meta[relay.Constant][95] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %980 = fn (%p0135: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p187: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p0135, %p187, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %981 = %980(%978, %979) /* ty=Tensor[(12, 128, 64), float16] */;
  %982 = fn (%p0134: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %336 = reshape(%p0134, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %337 = squeeze(%336, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %338 = transpose(%337, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %339 = reshape(%338, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %340 = broadcast_to(%339, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%340, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %983 = %982(%981) /* ty=Tensor[(1, 128, 768), float16] */;
  %984 = fn (%p0133: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p186: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0133, %p186, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %985 = %984(%983, meta[relay.Constant][96] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %986 = fn (%p0132: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p185: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p240: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %333 = reshape(%p0132, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %334 = squeeze(%333, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %335 = add(%334, %p185) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p240, %335) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %987 = %986(%985, meta[relay.Constant][97] /* ty=Tensor[(768), float16] */, %938) /* ty=Tensor[(1, 128, 768), float16] */;
  %988 = fn (%p0131: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0131, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %989 = %988(%987) /* ty=Tensor[(1, 128, 768), float32] */;
  %990 = fn (%p0130: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0130, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %991 = %990(%989) /* ty=Tensor[(1, 128, 1), float32] */;
  %992 = fn (%p0281: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1194: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0281, %p1194, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %993 = %992(%989, %991) /* ty=Tensor[(1, 128, 1), float32] */;
  %994 = fn (%p0129: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p184: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p239: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p326: float16 /* ty=float16 */, %p413: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p513: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %324 = cast(%p0129, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %325 = cast(%p239, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %326 = add(%325, %p326) /* ty=Tensor[(1, 128, 1), float16] */;
    %327 = subtract(%p184, %324) /* ty=Tensor[(1, 128, 768), float16] */;
    %328 = sqrt(%326) /* ty=Tensor[(1, 128, 1), float16] */;
    %329 = divide(%327, %328) /* ty=Tensor[(1, 128, 768), float16] */;
    %330 = multiply(%329, %p413) /* ty=Tensor[(1, 128, 768), float16] */;
    %331 = add(%330, %p513) /* ty=Tensor[(1, 128, 768), float16] */;
    %332 = broadcast_to(%331, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%332, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %995 = %994(%991, %987, %993, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][98] /* ty=Tensor[(768), float16] */, meta[relay.Constant][99] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %996 = fn (%p0128: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p183: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p0128, %p183, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %997 = %996(%995, meta[relay.Constant][100] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %998 = fn (%p0127: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p182: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p238: float16 /* ty=float16 */, %p325: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %313 = reshape(%p0127, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %314 = squeeze(%313, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %315 = add(%314, %p182) /* ty=Tensor[(1, 128, 3072), float16] */;
    %316 = multiply(%315, %p238) /* ty=Tensor[(1, 128, 3072), float16] */;
    %317 = cast(%316, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %318 = erf(%317) /* ty=Tensor[(1, 128, 3072), float32] */;
    %319 = cast(%318, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    %320 = multiply(%319, %p325) /* ty=Tensor[(1, 128, 3072), float16] */;
    %321 = add(%p325, %320) /* ty=Tensor[(1, 128, 3072), float16] */;
    %322 = multiply(%315, %321) /* ty=Tensor[(1, 128, 3072), float16] */;
    %323 = broadcast_to(%322, shape=[1, 128, 3072], dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    reshape(%323, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16, float16) -> Tensor[(1, 128, 3072), float16] */;
  %999 = %998(%997, meta[relay.Constant][101] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1000 = fn (%p0126: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p181: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0126, %p181, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1001 = %1000(%999, meta[relay.Constant][102] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1002 = fn (%p0125: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p180: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p237: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %310 = reshape(%p0125, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %311 = squeeze(%310, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %312 = add(%311, %p180) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p237, %312) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1003 = %1002(%1001, meta[relay.Constant][103] /* ty=Tensor[(768), float16] */, %987) /* ty=Tensor[(1, 128, 768), float16] */;
  %1004 = fn (%p0124: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0124, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1005 = %1004(%1003) /* ty=Tensor[(1, 128, 768), float32] */;
  %1006 = fn (%p0123: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0123, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1007 = %1006(%1005) /* ty=Tensor[(1, 128, 1), float32] */;
  %1008 = fn (%p0282: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1195: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0282, %p1195, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1009 = %1008(%1005, %1007) /* ty=Tensor[(1, 128, 1), float32] */;
  %1010 = fn (%p0122: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p179: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p236: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p324: float16 /* ty=float16 */, %p412: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p512: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %301 = cast(%p0122, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %302 = cast(%p236, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %303 = add(%302, %p324) /* ty=Tensor[(1, 128, 1), float16] */;
    %304 = subtract(%p179, %301) /* ty=Tensor[(1, 128, 768), float16] */;
    %305 = sqrt(%303) /* ty=Tensor[(1, 128, 1), float16] */;
    %306 = divide(%304, %305) /* ty=Tensor[(1, 128, 768), float16] */;
    %307 = multiply(%306, %p412) /* ty=Tensor[(1, 128, 768), float16] */;
    %308 = add(%307, %p512) /* ty=Tensor[(1, 128, 768), float16] */;
    %309 = broadcast_to(%308, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%309, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1011 = %1010(%1007, %1003, %1009, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][104] /* ty=Tensor[(768), float16] */, meta[relay.Constant][105] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1012 = fn (%p0121: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p178: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0121, %p178, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1013 = %1012(%1011, meta[relay.Constant][106] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1014 = fn (%p0120: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p177: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %295 = reshape(%p0120, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %296 = squeeze(%295, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %297 = add(%296, %p177) /* ty=Tensor[(1, 128, 768), float16] */;
    %298 = reshape(%297, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %299 = transpose(%298, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %300 = broadcast_to(%299, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%300, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1022 = fn (%p0284: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1197: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0284, %p1197, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1023 = %1022(%1011, meta[relay.Constant][108] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1024 = fn (%p0283: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1196: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %1015 = reshape(%p0283, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1016 = squeeze(%1015, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1017 = add(%1016, %p1196) /* ty=Tensor[(1, 128, 768), float16] */;
    %1018 = reshape(%1017, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1019 = transpose(%1018, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1020 = transpose(%1019, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %1021 = broadcast_to(%1020, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%1021, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %1025 = %1014(%1013, meta[relay.Constant][107] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1026 = %1024(%1023, meta[relay.Constant][109] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %1027 = fn (%p0119: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p176: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p0119, %p176, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1028 = %1027(%1025, %1026) /* ty=Tensor[(12, 128, 128), float16] */;
  %1029 = fn (%p0118: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p175: float16 /* ty=float16 */, %p235: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p323: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %292 = reshape(%p0118, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %293 = squeeze(%292, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %294 = multiply(%293, %p175) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p235, %p323, %294) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %1030 = %1029(%1028, 0.125f16 /* ty=float16 */, meta[relay.Constant][110] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1031 = fn (%p0117: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %291 = nn.softmax(%p0117) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%291, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %1032 = %1031(%1030) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1033 = fn (%p0116: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p0116, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1040 = fn (%p0286: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1199: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0286, %p1199, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1041 = %1040(%1011, meta[relay.Constant][111] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1042 = fn (%p0285: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1198: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %1034 = reshape(%p0285, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1035 = squeeze(%1034, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1036 = add(%1035, %p1198) /* ty=Tensor[(1, 128, 768), float16] */;
    %1037 = reshape(%1036, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1038 = transpose(%1037, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1039 = broadcast_to(%1038, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%1039, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1043 = %1033(%1032) /* ty=Tensor[(12, 128, 128), float16] */;
  %1044 = %1042(%1041, meta[relay.Constant][112] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1045 = fn (%p0115: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p174: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p0115, %p174, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1046 = %1045(%1043, %1044) /* ty=Tensor[(12, 128, 64), float16] */;
  %1047 = fn (%p0114: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %286 = reshape(%p0114, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %287 = squeeze(%286, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %288 = transpose(%287, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %289 = reshape(%288, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %290 = broadcast_to(%289, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%290, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1048 = %1047(%1046) /* ty=Tensor[(1, 128, 768), float16] */;
  %1049 = fn (%p0113: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p173: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0113, %p173, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1050 = %1049(%1048, meta[relay.Constant][113] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1051 = fn (%p0112: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p172: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p234: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %283 = reshape(%p0112, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %284 = squeeze(%283, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %285 = add(%284, %p172) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p234, %285) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1052 = %1051(%1050, meta[relay.Constant][114] /* ty=Tensor[(768), float16] */, %1003) /* ty=Tensor[(1, 128, 768), float16] */;
  %1053 = fn (%p0111: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0111, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1054 = %1053(%1052) /* ty=Tensor[(1, 128, 768), float32] */;
  %1055 = fn (%p0110: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0110, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1056 = %1055(%1054) /* ty=Tensor[(1, 128, 1), float32] */;
  %1057 = fn (%p0287: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1200: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0287, %p1200, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1058 = %1057(%1054, %1056) /* ty=Tensor[(1, 128, 1), float32] */;
  %1059 = fn (%p0109: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p171: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p233: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p322: float16 /* ty=float16 */, %p411: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p511: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %274 = cast(%p0109, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %275 = cast(%p233, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %276 = add(%275, %p322) /* ty=Tensor[(1, 128, 1), float16] */;
    %277 = subtract(%p171, %274) /* ty=Tensor[(1, 128, 768), float16] */;
    %278 = sqrt(%276) /* ty=Tensor[(1, 128, 1), float16] */;
    %279 = divide(%277, %278) /* ty=Tensor[(1, 128, 768), float16] */;
    %280 = multiply(%279, %p411) /* ty=Tensor[(1, 128, 768), float16] */;
    %281 = add(%280, %p511) /* ty=Tensor[(1, 128, 768), float16] */;
    %282 = broadcast_to(%281, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%282, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1060 = %1059(%1056, %1052, %1058, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][115] /* ty=Tensor[(768), float16] */, meta[relay.Constant][116] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1061 = fn (%p0108: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p170: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p0108, %p170, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %1062 = %1061(%1060, meta[relay.Constant][117] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1063 = fn (%p0107: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p169: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p232: float16 /* ty=float16 */, %p321: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %263 = reshape(%p0107, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %264 = squeeze(%263, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %265 = add(%264, %p169) /* ty=Tensor[(1, 128, 3072), float16] */;
    %266 = multiply(%265, %p232) /* ty=Tensor[(1, 128, 3072), float16] */;
    %267 = cast(%266, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %268 = erf(%267) /* ty=Tensor[(1, 128, 3072), float32] */;
    %269 = cast(%268, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    %270 = multiply(%269, %p321) /* ty=Tensor[(1, 128, 3072), float16] */;
    %271 = add(%p321, %270) /* ty=Tensor[(1, 128, 3072), float16] */;
    %272 = multiply(%265, %271) /* ty=Tensor[(1, 128, 3072), float16] */;
    %273 = broadcast_to(%272, shape=[1, 128, 3072], dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    reshape(%273, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16, float16) -> Tensor[(1, 128, 3072), float16] */;
  %1064 = %1063(%1062, meta[relay.Constant][118] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1065 = fn (%p0106: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p168: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0106, %p168, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1066 = %1065(%1064, meta[relay.Constant][119] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1067 = fn (%p0105: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p167: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p231: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %260 = reshape(%p0105, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %261 = squeeze(%260, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %262 = add(%261, %p167) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p231, %262) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1068 = %1067(%1066, meta[relay.Constant][120] /* ty=Tensor[(768), float16] */, %1052) /* ty=Tensor[(1, 128, 768), float16] */;
  %1069 = fn (%p0104: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p0104, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1070 = %1069(%1068) /* ty=Tensor[(1, 128, 768), float32] */;
  %1071 = fn (%p0103: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p0103, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1072 = %1071(%1070) /* ty=Tensor[(1, 128, 1), float32] */;
  %1073 = fn (%p0288: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1201: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0288, %p1201, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1074 = %1073(%1070, %1072) /* ty=Tensor[(1, 128, 1), float32] */;
  %1075 = fn (%p0102: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p166: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p230: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p320: float16 /* ty=float16 */, %p410: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p510: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %251 = cast(%p0102, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %252 = cast(%p230, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %253 = add(%252, %p320) /* ty=Tensor[(1, 128, 1), float16] */;
    %254 = subtract(%p166, %251) /* ty=Tensor[(1, 128, 768), float16] */;
    %255 = sqrt(%253) /* ty=Tensor[(1, 128, 1), float16] */;
    %256 = divide(%254, %255) /* ty=Tensor[(1, 128, 768), float16] */;
    %257 = multiply(%256, %p410) /* ty=Tensor[(1, 128, 768), float16] */;
    %258 = add(%257, %p510) /* ty=Tensor[(1, 128, 768), float16] */;
    %259 = broadcast_to(%258, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%259, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1076 = %1075(%1072, %1068, %1074, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][121] /* ty=Tensor[(768), float16] */, meta[relay.Constant][122] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1077 = fn (%p0101: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p165: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0101, %p165, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1078 = %1077(%1076, meta[relay.Constant][123] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1079 = fn (%p0100: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p164: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %245 = reshape(%p0100, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %246 = squeeze(%245, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %247 = add(%246, %p164) /* ty=Tensor[(1, 128, 768), float16] */;
    %248 = reshape(%247, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %249 = transpose(%248, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %250 = broadcast_to(%249, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%250, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1087 = fn (%p0290: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1203: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0290, %p1203, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1088 = %1087(%1076, meta[relay.Constant][125] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1089 = fn (%p0289: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1202: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %1080 = reshape(%p0289, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1081 = squeeze(%1080, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1082 = add(%1081, %p1202) /* ty=Tensor[(1, 128, 768), float16] */;
    %1083 = reshape(%1082, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1084 = transpose(%1083, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1085 = transpose(%1084, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %1086 = broadcast_to(%1085, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%1086, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %1090 = %1079(%1078, meta[relay.Constant][124] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1091 = %1089(%1088, meta[relay.Constant][126] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %1092 = fn (%p099: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p163: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p099, %p163, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1093 = %1092(%1090, %1091) /* ty=Tensor[(12, 128, 128), float16] */;
  %1094 = fn (%p098: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p162: float16 /* ty=float16 */, %p229: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p319: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %242 = reshape(%p098, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %243 = squeeze(%242, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %244 = multiply(%243, %p162) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p229, %p319, %244) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %1095 = %1094(%1093, 0.125f16 /* ty=float16 */, meta[relay.Constant][127] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1096 = fn (%p097: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %241 = nn.softmax(%p097) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%241, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %1097 = %1096(%1095) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1098 = fn (%p096: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p096, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1105 = fn (%p0292: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1205: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0292, %p1205, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1106 = %1105(%1076, meta[relay.Constant][128] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1107 = fn (%p0291: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1204: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %1099 = reshape(%p0291, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1100 = squeeze(%1099, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1101 = add(%1100, %p1204) /* ty=Tensor[(1, 128, 768), float16] */;
    %1102 = reshape(%1101, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1103 = transpose(%1102, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1104 = broadcast_to(%1103, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%1104, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1108 = %1098(%1097) /* ty=Tensor[(12, 128, 128), float16] */;
  %1109 = %1107(%1106, meta[relay.Constant][129] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1110 = fn (%p095: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p161: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p095, %p161, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1111 = %1110(%1108, %1109) /* ty=Tensor[(12, 128, 64), float16] */;
  %1112 = fn (%p094: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %236 = reshape(%p094, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %237 = squeeze(%236, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %238 = transpose(%237, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %239 = reshape(%238, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %240 = broadcast_to(%239, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%240, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1113 = %1112(%1111) /* ty=Tensor[(1, 128, 768), float16] */;
  %1114 = fn (%p093: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p160: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p093, %p160, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1115 = %1114(%1113, meta[relay.Constant][130] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1116 = fn (%p092: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p159: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p228: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %233 = reshape(%p092, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %234 = squeeze(%233, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %235 = add(%234, %p159) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p228, %235) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1117 = %1116(%1115, meta[relay.Constant][131] /* ty=Tensor[(768), float16] */, %1068) /* ty=Tensor[(1, 128, 768), float16] */;
  %1118 = fn (%p091: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p091, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1119 = %1118(%1117) /* ty=Tensor[(1, 128, 768), float32] */;
  %1120 = fn (%p090: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p090, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1121 = %1120(%1119) /* ty=Tensor[(1, 128, 1), float32] */;
  %1122 = fn (%p0293: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1206: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0293, %p1206, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1123 = %1122(%1119, %1121) /* ty=Tensor[(1, 128, 1), float32] */;
  %1124 = fn (%p089: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p158: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p227: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p318: float16 /* ty=float16 */, %p49: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p59: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %224 = cast(%p089, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %225 = cast(%p227, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %226 = add(%225, %p318) /* ty=Tensor[(1, 128, 1), float16] */;
    %227 = subtract(%p158, %224) /* ty=Tensor[(1, 128, 768), float16] */;
    %228 = sqrt(%226) /* ty=Tensor[(1, 128, 1), float16] */;
    %229 = divide(%227, %228) /* ty=Tensor[(1, 128, 768), float16] */;
    %230 = multiply(%229, %p49) /* ty=Tensor[(1, 128, 768), float16] */;
    %231 = add(%230, %p59) /* ty=Tensor[(1, 128, 768), float16] */;
    %232 = broadcast_to(%231, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%232, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1125 = %1124(%1121, %1117, %1123, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][132] /* ty=Tensor[(768), float16] */, meta[relay.Constant][133] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1126 = fn (%p088: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p157: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p088, %p157, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %1127 = %1126(%1125, meta[relay.Constant][134] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1128 = fn (%p087: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p156: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p226: float16 /* ty=float16 */, %p317: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %213 = reshape(%p087, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %214 = squeeze(%213, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %215 = add(%214, %p156) /* ty=Tensor[(1, 128, 3072), float16] */;
    %216 = multiply(%215, %p226) /* ty=Tensor[(1, 128, 3072), float16] */;
    %217 = cast(%216, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %218 = erf(%217) /* ty=Tensor[(1, 128, 3072), float32] */;
    %219 = cast(%218, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    %220 = multiply(%219, %p317) /* ty=Tensor[(1, 128, 3072), float16] */;
    %221 = add(%p317, %220) /* ty=Tensor[(1, 128, 3072), float16] */;
    %222 = multiply(%215, %221) /* ty=Tensor[(1, 128, 3072), float16] */;
    %223 = broadcast_to(%222, shape=[1, 128, 3072], dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    reshape(%223, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16, float16) -> Tensor[(1, 128, 3072), float16] */;
  %1129 = %1128(%1127, meta[relay.Constant][135] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1130 = fn (%p086: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p155: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p086, %p155, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1131 = %1130(%1129, meta[relay.Constant][136] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1132 = fn (%p085: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p154: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p225: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %210 = reshape(%p085, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %211 = squeeze(%210, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %212 = add(%211, %p154) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p225, %212) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1133 = %1132(%1131, meta[relay.Constant][137] /* ty=Tensor[(768), float16] */, %1117) /* ty=Tensor[(1, 128, 768), float16] */;
  %1134 = fn (%p084: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p084, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1135 = %1134(%1133) /* ty=Tensor[(1, 128, 768), float32] */;
  %1136 = fn (%p083: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p083, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1137 = %1136(%1135) /* ty=Tensor[(1, 128, 1), float32] */;
  %1138 = fn (%p0294: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1207: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0294, %p1207, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1139 = %1138(%1135, %1137) /* ty=Tensor[(1, 128, 1), float32] */;
  %1140 = fn (%p082: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p153: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p224: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p316: float16 /* ty=float16 */, %p48: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p58: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %201 = cast(%p082, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %202 = cast(%p224, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %203 = add(%202, %p316) /* ty=Tensor[(1, 128, 1), float16] */;
    %204 = subtract(%p153, %201) /* ty=Tensor[(1, 128, 768), float16] */;
    %205 = sqrt(%203) /* ty=Tensor[(1, 128, 1), float16] */;
    %206 = divide(%204, %205) /* ty=Tensor[(1, 128, 768), float16] */;
    %207 = multiply(%206, %p48) /* ty=Tensor[(1, 128, 768), float16] */;
    %208 = add(%207, %p58) /* ty=Tensor[(1, 128, 768), float16] */;
    %209 = broadcast_to(%208, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%209, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1141 = %1140(%1137, %1133, %1139, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][138] /* ty=Tensor[(768), float16] */, meta[relay.Constant][139] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1142 = fn (%p081: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p152: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p081, %p152, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1143 = %1142(%1141, meta[relay.Constant][140] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1144 = fn (%p080: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p151: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %195 = reshape(%p080, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %196 = squeeze(%195, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %197 = add(%196, %p151) /* ty=Tensor[(1, 128, 768), float16] */;
    %198 = reshape(%197, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %199 = transpose(%198, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %200 = broadcast_to(%199, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%200, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1152 = fn (%p0296: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1209: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0296, %p1209, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1153 = %1152(%1141, meta[relay.Constant][142] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1154 = fn (%p0295: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1208: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %1145 = reshape(%p0295, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1146 = squeeze(%1145, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1147 = add(%1146, %p1208) /* ty=Tensor[(1, 128, 768), float16] */;
    %1148 = reshape(%1147, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1149 = transpose(%1148, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1150 = transpose(%1149, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %1151 = broadcast_to(%1150, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%1151, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %1155 = %1144(%1143, meta[relay.Constant][141] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1156 = %1154(%1153, meta[relay.Constant][143] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %1157 = fn (%p079: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p150: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p079, %p150, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1158 = %1157(%1155, %1156) /* ty=Tensor[(12, 128, 128), float16] */;
  %1159 = fn (%p078: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p149: float16 /* ty=float16 */, %p223: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p315: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %192 = reshape(%p078, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %193 = squeeze(%192, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %194 = multiply(%193, %p149) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p223, %p315, %194) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %1160 = %1159(%1158, 0.125f16 /* ty=float16 */, meta[relay.Constant][144] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1161 = fn (%p077: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %191 = nn.softmax(%p077) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%191, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %1162 = %1161(%1160) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1163 = fn (%p076: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p076, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1170 = fn (%p0298: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1211: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0298, %p1211, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1171 = %1170(%1141, meta[relay.Constant][145] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1172 = fn (%p0297: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1210: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %1164 = reshape(%p0297, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1165 = squeeze(%1164, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1166 = add(%1165, %p1210) /* ty=Tensor[(1, 128, 768), float16] */;
    %1167 = reshape(%1166, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1168 = transpose(%1167, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1169 = broadcast_to(%1168, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%1169, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1173 = %1163(%1162) /* ty=Tensor[(12, 128, 128), float16] */;
  %1174 = %1172(%1171, meta[relay.Constant][146] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1175 = fn (%p075: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p148: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p075, %p148, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1176 = %1175(%1173, %1174) /* ty=Tensor[(12, 128, 64), float16] */;
  %1177 = fn (%p074: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %186 = reshape(%p074, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %187 = squeeze(%186, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %188 = transpose(%187, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %189 = reshape(%188, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %190 = broadcast_to(%189, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%190, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1178 = %1177(%1176) /* ty=Tensor[(1, 128, 768), float16] */;
  %1179 = fn (%p073: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p147: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p073, %p147, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1180 = %1179(%1178, meta[relay.Constant][147] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1181 = fn (%p072: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p146: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p222: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %183 = reshape(%p072, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %184 = squeeze(%183, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %185 = add(%184, %p146) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p222, %185) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1182 = %1181(%1180, meta[relay.Constant][148] /* ty=Tensor[(768), float16] */, %1133) /* ty=Tensor[(1, 128, 768), float16] */;
  %1183 = fn (%p071: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p071, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1184 = %1183(%1182) /* ty=Tensor[(1, 128, 768), float32] */;
  %1185 = fn (%p070: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p070, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1186 = %1185(%1184) /* ty=Tensor[(1, 128, 1), float32] */;
  %1187 = fn (%p0299: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1212: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0299, %p1212, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1188 = %1187(%1184, %1186) /* ty=Tensor[(1, 128, 1), float32] */;
  %1189 = fn (%p069: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p145: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p221: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p314: float16 /* ty=float16 */, %p47: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p57: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %174 = cast(%p069, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %175 = cast(%p221, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %176 = add(%175, %p314) /* ty=Tensor[(1, 128, 1), float16] */;
    %177 = subtract(%p145, %174) /* ty=Tensor[(1, 128, 768), float16] */;
    %178 = sqrt(%176) /* ty=Tensor[(1, 128, 1), float16] */;
    %179 = divide(%177, %178) /* ty=Tensor[(1, 128, 768), float16] */;
    %180 = multiply(%179, %p47) /* ty=Tensor[(1, 128, 768), float16] */;
    %181 = add(%180, %p57) /* ty=Tensor[(1, 128, 768), float16] */;
    %182 = broadcast_to(%181, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%182, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1190 = %1189(%1186, %1182, %1188, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][149] /* ty=Tensor[(768), float16] */, meta[relay.Constant][150] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1191 = fn (%p068: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p144: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p068, %p144, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %1192 = %1191(%1190, meta[relay.Constant][151] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1193 = fn (%p067: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p143: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p220: float16 /* ty=float16 */, %p313: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %163 = reshape(%p067, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %164 = squeeze(%163, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %165 = add(%164, %p143) /* ty=Tensor[(1, 128, 3072), float16] */;
    %166 = multiply(%165, %p220) /* ty=Tensor[(1, 128, 3072), float16] */;
    %167 = cast(%166, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %168 = erf(%167) /* ty=Tensor[(1, 128, 3072), float32] */;
    %169 = cast(%168, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    %170 = multiply(%169, %p313) /* ty=Tensor[(1, 128, 3072), float16] */;
    %171 = add(%p313, %170) /* ty=Tensor[(1, 128, 3072), float16] */;
    %172 = multiply(%165, %171) /* ty=Tensor[(1, 128, 3072), float16] */;
    %173 = broadcast_to(%172, shape=[1, 128, 3072], dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    reshape(%173, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16, float16) -> Tensor[(1, 128, 3072), float16] */;
  %1194 = %1193(%1192, meta[relay.Constant][152] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1195 = fn (%p066: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p142: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p066, %p142, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1196 = %1195(%1194, meta[relay.Constant][153] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1197 = fn (%p065: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p141: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p219: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %160 = reshape(%p065, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %161 = squeeze(%160, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %162 = add(%161, %p141) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p219, %162) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1198 = %1197(%1196, meta[relay.Constant][154] /* ty=Tensor[(768), float16] */, %1182) /* ty=Tensor[(1, 128, 768), float16] */;
  %1199 = fn (%p064: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p064, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1200 = %1199(%1198) /* ty=Tensor[(1, 128, 768), float32] */;
  %1201 = fn (%p063: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p063, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1202 = %1201(%1200) /* ty=Tensor[(1, 128, 1), float32] */;
  %1203 = fn (%p0300: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1213: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0300, %p1213, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1204 = %1203(%1200, %1202) /* ty=Tensor[(1, 128, 1), float32] */;
  %1205 = fn (%p062: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p140: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p218: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p312: float16 /* ty=float16 */, %p46: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p56: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %151 = cast(%p062, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %152 = cast(%p218, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %153 = add(%152, %p312) /* ty=Tensor[(1, 128, 1), float16] */;
    %154 = subtract(%p140, %151) /* ty=Tensor[(1, 128, 768), float16] */;
    %155 = sqrt(%153) /* ty=Tensor[(1, 128, 1), float16] */;
    %156 = divide(%154, %155) /* ty=Tensor[(1, 128, 768), float16] */;
    %157 = multiply(%156, %p46) /* ty=Tensor[(1, 128, 768), float16] */;
    %158 = add(%157, %p56) /* ty=Tensor[(1, 128, 768), float16] */;
    %159 = broadcast_to(%158, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%159, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1206 = %1205(%1202, %1198, %1204, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][155] /* ty=Tensor[(768), float16] */, meta[relay.Constant][156] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1207 = fn (%p061: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p139: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p061, %p139, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1208 = %1207(%1206, meta[relay.Constant][157] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1209 = fn (%p060: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p138: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %145 = reshape(%p060, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %146 = squeeze(%145, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %147 = add(%146, %p138) /* ty=Tensor[(1, 128, 768), float16] */;
    %148 = reshape(%147, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %149 = transpose(%148, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %150 = broadcast_to(%149, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%150, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1217 = fn (%p0302: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1215: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0302, %p1215, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1218 = %1217(%1206, meta[relay.Constant][159] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1219 = fn (%p0301: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1214: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %1210 = reshape(%p0301, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1211 = squeeze(%1210, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1212 = add(%1211, %p1214) /* ty=Tensor[(1, 128, 768), float16] */;
    %1213 = reshape(%1212, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1214 = transpose(%1213, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1215 = transpose(%1214, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %1216 = broadcast_to(%1215, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%1216, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %1220 = %1209(%1208, meta[relay.Constant][158] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1221 = %1219(%1218, meta[relay.Constant][160] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %1222 = fn (%p059: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p137: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p059, %p137, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1223 = %1222(%1220, %1221) /* ty=Tensor[(12, 128, 128), float16] */;
  %1224 = fn (%p058: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p136: float16 /* ty=float16 */, %p217: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p311: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %142 = reshape(%p058, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %143 = squeeze(%142, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %144 = multiply(%143, %p136) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p217, %p311, %144) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %1225 = %1224(%1223, 0.125f16 /* ty=float16 */, meta[relay.Constant][161] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1226 = fn (%p057: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %141 = nn.softmax(%p057) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%141, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %1227 = %1226(%1225) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1228 = fn (%p056: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p056, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1235 = fn (%p0304: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1217: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0304, %p1217, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1236 = %1235(%1206, meta[relay.Constant][162] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1237 = fn (%p0303: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1216: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %1229 = reshape(%p0303, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1230 = squeeze(%1229, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1231 = add(%1230, %p1216) /* ty=Tensor[(1, 128, 768), float16] */;
    %1232 = reshape(%1231, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1233 = transpose(%1232, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1234 = broadcast_to(%1233, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%1234, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1238 = %1228(%1227) /* ty=Tensor[(12, 128, 128), float16] */;
  %1239 = %1237(%1236, meta[relay.Constant][163] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1240 = fn (%p055: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p135: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p055, %p135, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1241 = %1240(%1238, %1239) /* ty=Tensor[(12, 128, 64), float16] */;
  %1242 = fn (%p054: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %136 = reshape(%p054, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %137 = squeeze(%136, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %138 = transpose(%137, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %139 = reshape(%138, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %140 = broadcast_to(%139, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%140, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1243 = %1242(%1241) /* ty=Tensor[(1, 128, 768), float16] */;
  %1244 = fn (%p053: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p134: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p053, %p134, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1245 = %1244(%1243, meta[relay.Constant][164] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1246 = fn (%p052: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p133: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p216: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %133 = reshape(%p052, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %134 = squeeze(%133, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %135 = add(%134, %p133) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p216, %135) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1247 = %1246(%1245, meta[relay.Constant][165] /* ty=Tensor[(768), float16] */, %1198) /* ty=Tensor[(1, 128, 768), float16] */;
  %1248 = fn (%p051: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p051, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1249 = %1248(%1247) /* ty=Tensor[(1, 128, 768), float32] */;
  %1250 = fn (%p050: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p050, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1251 = %1250(%1249) /* ty=Tensor[(1, 128, 1), float32] */;
  %1252 = fn (%p0305: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1218: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0305, %p1218, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1253 = %1252(%1249, %1251) /* ty=Tensor[(1, 128, 1), float32] */;
  %1254 = fn (%p049: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p132: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p215: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p310: float16 /* ty=float16 */, %p45: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p55: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %124 = cast(%p049, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %125 = cast(%p215, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %126 = add(%125, %p310) /* ty=Tensor[(1, 128, 1), float16] */;
    %127 = subtract(%p132, %124) /* ty=Tensor[(1, 128, 768), float16] */;
    %128 = sqrt(%126) /* ty=Tensor[(1, 128, 1), float16] */;
    %129 = divide(%127, %128) /* ty=Tensor[(1, 128, 768), float16] */;
    %130 = multiply(%129, %p45) /* ty=Tensor[(1, 128, 768), float16] */;
    %131 = add(%130, %p55) /* ty=Tensor[(1, 128, 768), float16] */;
    %132 = broadcast_to(%131, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%132, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1255 = %1254(%1251, %1247, %1253, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][166] /* ty=Tensor[(768), float16] */, meta[relay.Constant][167] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1256 = fn (%p048: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p131: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p048, %p131, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %1257 = %1256(%1255, meta[relay.Constant][168] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1258 = fn (%p047: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p130: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p214: float16 /* ty=float16 */, %p39: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %113 = reshape(%p047, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %114 = squeeze(%113, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %115 = add(%114, %p130) /* ty=Tensor[(1, 128, 3072), float16] */;
    %116 = multiply(%115, %p214) /* ty=Tensor[(1, 128, 3072), float16] */;
    %117 = cast(%116, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %118 = erf(%117) /* ty=Tensor[(1, 128, 3072), float32] */;
    %119 = cast(%118, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    %120 = multiply(%119, %p39) /* ty=Tensor[(1, 128, 3072), float16] */;
    %121 = add(%p39, %120) /* ty=Tensor[(1, 128, 3072), float16] */;
    %122 = multiply(%115, %121) /* ty=Tensor[(1, 128, 3072), float16] */;
    %123 = broadcast_to(%122, shape=[1, 128, 3072], dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    reshape(%123, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16, float16) -> Tensor[(1, 128, 3072), float16] */;
  %1259 = %1258(%1257, meta[relay.Constant][169] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1260 = fn (%p046: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p129: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p046, %p129, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1261 = %1260(%1259, meta[relay.Constant][170] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1262 = fn (%p045: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p128: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p213: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %110 = reshape(%p045, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %111 = squeeze(%110, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %112 = add(%111, %p128) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p213, %112) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1263 = %1262(%1261, meta[relay.Constant][171] /* ty=Tensor[(768), float16] */, %1247) /* ty=Tensor[(1, 128, 768), float16] */;
  %1264 = fn (%p044: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p044, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1265 = %1264(%1263) /* ty=Tensor[(1, 128, 768), float32] */;
  %1266 = fn (%p043: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p043, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1267 = %1266(%1265) /* ty=Tensor[(1, 128, 1), float32] */;
  %1268 = fn (%p0306: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1219: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0306, %p1219, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1269 = %1268(%1265, %1267) /* ty=Tensor[(1, 128, 1), float32] */;
  %1270 = fn (%p042: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p127: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p212: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p38: float16 /* ty=float16 */, %p44: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p54: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %101 = cast(%p042, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %102 = cast(%p212, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %103 = add(%102, %p38) /* ty=Tensor[(1, 128, 1), float16] */;
    %104 = subtract(%p127, %101) /* ty=Tensor[(1, 128, 768), float16] */;
    %105 = sqrt(%103) /* ty=Tensor[(1, 128, 1), float16] */;
    %106 = divide(%104, %105) /* ty=Tensor[(1, 128, 768), float16] */;
    %107 = multiply(%106, %p44) /* ty=Tensor[(1, 128, 768), float16] */;
    %108 = add(%107, %p54) /* ty=Tensor[(1, 128, 768), float16] */;
    %109 = broadcast_to(%108, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%109, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1271 = %1270(%1267, %1263, %1269, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][172] /* ty=Tensor[(768), float16] */, meta[relay.Constant][173] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1272 = fn (%p041: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p126: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p041, %p126, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1273 = %1272(%1271, meta[relay.Constant][174] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1274 = fn (%p040: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p125: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %95 = reshape(%p040, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %96 = squeeze(%95, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %97 = add(%96, %p125) /* ty=Tensor[(1, 128, 768), float16] */;
    %98 = reshape(%97, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %99 = transpose(%98, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %100 = broadcast_to(%99, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%100, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1282 = fn (%p0308: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1221: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0308, %p1221, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1283 = %1282(%1271, meta[relay.Constant][176] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1284 = fn (%p0307: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1220: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %1275 = reshape(%p0307, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1276 = squeeze(%1275, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1277 = add(%1276, %p1220) /* ty=Tensor[(1, 128, 768), float16] */;
    %1278 = reshape(%1277, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1279 = transpose(%1278, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1280 = transpose(%1279, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %1281 = broadcast_to(%1280, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%1281, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %1285 = %1274(%1273, meta[relay.Constant][175] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1286 = %1284(%1283, meta[relay.Constant][177] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %1287 = fn (%p039: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p124: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p039, %p124, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1288 = %1287(%1285, %1286) /* ty=Tensor[(12, 128, 128), float16] */;
  %1289 = fn (%p038: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p123: float16 /* ty=float16 */, %p211: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p37: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %92 = reshape(%p038, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %93 = squeeze(%92, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %94 = multiply(%93, %p123) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p211, %p37, %94) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %1290 = %1289(%1288, 0.125f16 /* ty=float16 */, meta[relay.Constant][178] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1291 = fn (%p037: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %91 = nn.softmax(%p037) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%91, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %1292 = %1291(%1290) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1293 = fn (%p036: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p036, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1300 = fn (%p0310: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1223: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0310, %p1223, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1301 = %1300(%1271, meta[relay.Constant][179] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1302 = fn (%p0309: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1222: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %1294 = reshape(%p0309, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1295 = squeeze(%1294, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1296 = add(%1295, %p1222) /* ty=Tensor[(1, 128, 768), float16] */;
    %1297 = reshape(%1296, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1298 = transpose(%1297, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1299 = broadcast_to(%1298, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%1299, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1303 = %1293(%1292) /* ty=Tensor[(12, 128, 128), float16] */;
  %1304 = %1302(%1301, meta[relay.Constant][180] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1305 = fn (%p035: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p122: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p035, %p122, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1306 = %1305(%1303, %1304) /* ty=Tensor[(12, 128, 64), float16] */;
  %1307 = fn (%p034: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %86 = reshape(%p034, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %87 = squeeze(%86, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %88 = transpose(%87, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %89 = reshape(%88, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %90 = broadcast_to(%89, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%90, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1308 = %1307(%1306) /* ty=Tensor[(1, 128, 768), float16] */;
  %1309 = fn (%p033: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p121: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p033, %p121, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1310 = %1309(%1308, meta[relay.Constant][181] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1311 = fn (%p032: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p120: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p210: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %83 = reshape(%p032, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %84 = squeeze(%83, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %85 = add(%84, %p120) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p210, %85) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1312 = %1311(%1310, meta[relay.Constant][182] /* ty=Tensor[(768), float16] */, %1263) /* ty=Tensor[(1, 128, 768), float16] */;
  %1313 = fn (%p031: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p031, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1314 = %1313(%1312) /* ty=Tensor[(1, 128, 768), float32] */;
  %1315 = fn (%p030: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p030, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1316 = %1315(%1314) /* ty=Tensor[(1, 128, 1), float32] */;
  %1317 = fn (%p0311: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1224: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0311, %p1224, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1318 = %1317(%1314, %1316) /* ty=Tensor[(1, 128, 1), float32] */;
  %1319 = fn (%p029: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p119: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p29: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p36: float16 /* ty=float16 */, %p43: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p53: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %74 = cast(%p029, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %75 = cast(%p29, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %76 = add(%75, %p36) /* ty=Tensor[(1, 128, 1), float16] */;
    %77 = subtract(%p119, %74) /* ty=Tensor[(1, 128, 768), float16] */;
    %78 = sqrt(%76) /* ty=Tensor[(1, 128, 1), float16] */;
    %79 = divide(%77, %78) /* ty=Tensor[(1, 128, 768), float16] */;
    %80 = multiply(%79, %p43) /* ty=Tensor[(1, 128, 768), float16] */;
    %81 = add(%80, %p53) /* ty=Tensor[(1, 128, 768), float16] */;
    %82 = broadcast_to(%81, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%82, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1320 = %1319(%1316, %1312, %1318, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][183] /* ty=Tensor[(768), float16] */, meta[relay.Constant][184] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1321 = fn (%p028: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p118: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p028, %p118, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %1322 = %1321(%1320, meta[relay.Constant][185] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1323 = fn (%p027: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p117: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p28: float16 /* ty=float16 */, %p35: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %63 = reshape(%p027, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %64 = squeeze(%63, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %65 = add(%64, %p117) /* ty=Tensor[(1, 128, 3072), float16] */;
    %66 = multiply(%65, %p28) /* ty=Tensor[(1, 128, 3072), float16] */;
    %67 = cast(%66, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %68 = erf(%67) /* ty=Tensor[(1, 128, 3072), float32] */;
    %69 = cast(%68, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    %70 = multiply(%69, %p35) /* ty=Tensor[(1, 128, 3072), float16] */;
    %71 = add(%p35, %70) /* ty=Tensor[(1, 128, 3072), float16] */;
    %72 = multiply(%65, %71) /* ty=Tensor[(1, 128, 3072), float16] */;
    %73 = broadcast_to(%72, shape=[1, 128, 3072], dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    reshape(%73, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16, float16) -> Tensor[(1, 128, 3072), float16] */;
  %1324 = %1323(%1322, meta[relay.Constant][186] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1325 = fn (%p026: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p116: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p026, %p116, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1326 = %1325(%1324, meta[relay.Constant][187] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1327 = fn (%p025: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p115: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p27: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %60 = reshape(%p025, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %61 = squeeze(%60, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %62 = add(%61, %p115) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p27, %62) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1328 = %1327(%1326, meta[relay.Constant][188] /* ty=Tensor[(768), float16] */, %1312) /* ty=Tensor[(1, 128, 768), float16] */;
  %1329 = fn (%p024: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p024, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1330 = %1329(%1328) /* ty=Tensor[(1, 128, 768), float32] */;
  %1331 = fn (%p023: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p023, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1332 = %1331(%1330) /* ty=Tensor[(1, 128, 1), float32] */;
  %1333 = fn (%p0312: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1225: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0312, %p1225, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1334 = %1333(%1330, %1332) /* ty=Tensor[(1, 128, 1), float32] */;
  %1335 = fn (%p022: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p114: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p26: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p34: float16 /* ty=float16 */, %p42: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p52: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %51 = cast(%p022, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %52 = cast(%p26, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %53 = add(%52, %p34) /* ty=Tensor[(1, 128, 1), float16] */;
    %54 = subtract(%p114, %51) /* ty=Tensor[(1, 128, 768), float16] */;
    %55 = sqrt(%53) /* ty=Tensor[(1, 128, 1), float16] */;
    %56 = divide(%54, %55) /* ty=Tensor[(1, 128, 768), float16] */;
    %57 = multiply(%56, %p42) /* ty=Tensor[(1, 128, 768), float16] */;
    %58 = add(%57, %p52) /* ty=Tensor[(1, 128, 768), float16] */;
    %59 = broadcast_to(%58, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%59, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1336 = %1335(%1332, %1328, %1334, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][189] /* ty=Tensor[(768), float16] */, meta[relay.Constant][190] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1337 = fn (%p021: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p113: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p021, %p113, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1338 = %1337(%1336, meta[relay.Constant][191] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1339 = fn (%p020: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p112: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %45 = reshape(%p020, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %46 = squeeze(%45, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %47 = add(%46, %p112) /* ty=Tensor[(1, 128, 768), float16] */;
    %48 = reshape(%47, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %49 = transpose(%48, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %50 = broadcast_to(%49, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%50, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1347 = fn (%p0314: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1227: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0314, %p1227, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1348 = %1347(%1336, meta[relay.Constant][193] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1349 = fn (%p0313: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1226: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 64, 128), float16] {
    %1340 = reshape(%p0313, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1341 = squeeze(%1340, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1342 = add(%1341, %p1226) /* ty=Tensor[(1, 128, 768), float16] */;
    %1343 = reshape(%1342, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1344 = transpose(%1343, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1345 = transpose(%1344, axes=[0, 1, 3, 2]) /* ty=Tensor[(1, 12, 64, 128), float16] */;
    %1346 = broadcast_to(%1345, shape=[1, 12, 64, 128], dtype="float16") /* ty=Tensor[(1, 12, 64, 128), float16] */;
    reshape(%1346, newshape=[-1, 64, 128]) /* ty=Tensor[(12, 64, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 64, 128), float16] */;
  %1350 = %1339(%1338, meta[relay.Constant][192] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1351 = %1349(%1348, meta[relay.Constant][194] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 64, 128), float16] */;
  %1352 = fn (%p019: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, %p111: Tensor[(12, 64, 128), float16] /* ty=Tensor[(12, 64, 128), float16] */, Primitive=1) -> Tensor[(12, 128, 128), float16] {
    nn.batch_matmul(%p019, %p111, out_dtype="float16") /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16], Tensor[(12, 64, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1353 = %1352(%1350, %1351) /* ty=Tensor[(12, 128, 128), float16] */;
  %1354 = fn (%p018: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p110: float16 /* ty=float16 */, %p25: Tensor[(1, 1, 128, 128), bool] /* ty=Tensor[(1, 1, 128, 128), bool] */, %p33: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %42 = reshape(%p018, newshape=[1, 12, 128, 128]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %43 = squeeze(%42, axis=[]) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    %44 = multiply(%43, %p110) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    where(%p25, %p33, %44) /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], float16, Tensor[(1, 1, 128, 128), bool], float16) -> Tensor[(1, 12, 128, 128), float16] */;
  %1355 = %1354(%1353, 0.125f16 /* ty=float16 */, meta[relay.Constant][195] /* ty=Tensor[(1, 1, 128, 128), bool] */, -inff16 /* ty=float16 */) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1356 = fn (%p017: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1) -> Tensor[(1, 12, 128, 128), float16] {
    %41 = nn.softmax(%p017) /* ty=Tensor[(1, 12, 128, 128), float16] */;
    broadcast_to(%41, shape=[1, 12, 128, 128], dtype="float16") /* ty=Tensor[(1, 12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(1, 12, 128, 128), float16] */;
  %1357 = %1356(%1355) /* ty=Tensor[(1, 12, 128, 128), float16] */;
  %1358 = fn (%p016: Tensor[(1, 12, 128, 128), float16] /* ty=Tensor[(1, 12, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(12, 128, 128), float16] {
    reshape(%p016, newshape=[-1, 128, 128]) /* ty=Tensor[(12, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 12, 128, 128), float16]) -> Tensor[(12, 128, 128), float16] */;
  %1365 = fn (%p0316: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1229: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p0316, %p1229, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1366 = %1365(%1336, meta[relay.Constant][196] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1367 = fn (%p0315: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1228: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    %1359 = reshape(%p0315, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1360 = squeeze(%1359, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %1361 = add(%1360, %p1228) /* ty=Tensor[(1, 128, 768), float16] */;
    %1362 = reshape(%1361, newshape=[1, 128, 12, 64]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %1363 = transpose(%1362, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %1364 = broadcast_to(%1363, shape=[1, 12, 128, 64], dtype="float16") /* ty=Tensor[(1, 12, 128, 64), float16] */;
    reshape(%1364, newshape=[-1, 128, 64]) /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1368 = %1358(%1357) /* ty=Tensor[(12, 128, 128), float16] */;
  %1369 = %1367(%1366, meta[relay.Constant][197] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(12, 128, 64), float16] */;
  %1370 = fn (%p015: Tensor[(12, 128, 128), float16] /* ty=Tensor[(12, 128, 128), float16] */, %p19: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(12, 128, 64), float16] {
    nn.batch_matmul(%p015, %p19, out_dtype="float16") /* ty=Tensor[(12, 128, 64), float16] */
  } /* ty=fn (Tensor[(12, 128, 128), float16], Tensor[(12, 128, 64), float16]) -> Tensor[(12, 128, 64), float16] */;
  %1371 = %1370(%1368, %1369) /* ty=Tensor[(12, 128, 64), float16] */;
  %1372 = fn (%p014: Tensor[(12, 128, 64), float16] /* ty=Tensor[(12, 128, 64), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %36 = reshape(%p014, newshape=[1, 12, 128, 64]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %37 = squeeze(%36, axis=[]) /* ty=Tensor[(1, 12, 128, 64), float16] */;
    %38 = transpose(%37, axes=[0, 2, 1, 3]) /* ty=Tensor[(1, 128, 12, 64), float16] */;
    %39 = reshape(%38, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %40 = broadcast_to(%39, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%40, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(12, 128, 64), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1373 = %1372(%1371) /* ty=Tensor[(1, 128, 768), float16] */;
  %1374 = fn (%p013: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p18: Tensor[(1, 768, 768), float16] /* ty=Tensor[(1, 768, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p013, %p18, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1375 = %1374(%1373, meta[relay.Constant][198] /* ty=Tensor[(1, 768, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1376 = fn (%p012: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p17: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p24: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %33 = reshape(%p012, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %34 = squeeze(%33, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %35 = add(%34, %p17) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p24, %35) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1377 = %1376(%1375, meta[relay.Constant][199] /* ty=Tensor[(768), float16] */, %1328) /* ty=Tensor[(1, 128, 768), float16] */;
  %1378 = fn (%p011: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p011, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1379 = %1378(%1377) /* ty=Tensor[(1, 128, 768), float32] */;
  %1380 = fn (%p010: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p010, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1381 = %1380(%1379) /* ty=Tensor[(1, 128, 1), float32] */;
  %1382 = fn (%p0317: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1230: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0317, %p1230, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1383 = %1382(%1379, %1381) /* ty=Tensor[(1, 128, 1), float32] */;
  %1384 = fn (%p09: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p16: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p23: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p32: float16 /* ty=float16 */, %p41: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p51: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %24 = cast(%p09, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %25 = cast(%p23, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %26 = add(%25, %p32) /* ty=Tensor[(1, 128, 1), float16] */;
    %27 = subtract(%p16, %24) /* ty=Tensor[(1, 128, 768), float16] */;
    %28 = sqrt(%26) /* ty=Tensor[(1, 128, 1), float16] */;
    %29 = divide(%27, %28) /* ty=Tensor[(1, 128, 768), float16] */;
    %30 = multiply(%29, %p41) /* ty=Tensor[(1, 128, 768), float16] */;
    %31 = add(%30, %p51) /* ty=Tensor[(1, 128, 768), float16] */;
    %32 = broadcast_to(%31, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%32, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1385 = %1384(%1381, %1377, %1383, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][200] /* ty=Tensor[(768), float16] */, meta[relay.Constant][201] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1386 = fn (%p08: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p15: Tensor[(1, 768, 3072), float16] /* ty=Tensor[(1, 768, 3072), float16] */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    nn.batch_matmul(%p08, %p15, out_dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 3072), float16]) -> Tensor[(1, 128, 3072), float16] */;
  %1387 = %1386(%1385, meta[relay.Constant][202] /* ty=Tensor[(1, 768, 3072), float16] */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1388 = fn (%p07: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p14: Tensor[(3072), float16] /* ty=Tensor[(3072), float16] */, %p22: float16 /* ty=float16 */, %p31: float16 /* ty=float16 */, Primitive=1) -> Tensor[(1, 128, 3072), float16] {
    %13 = reshape(%p07, newshape=[1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %14 = squeeze(%13, axis=[]) /* ty=Tensor[(1, 128, 3072), float16] */;
    %15 = add(%14, %p14) /* ty=Tensor[(1, 128, 3072), float16] */;
    %16 = multiply(%15, %p22) /* ty=Tensor[(1, 128, 3072), float16] */;
    %17 = cast(%16, dtype="float32") /* ty=Tensor[(1, 128, 3072), float32] */;
    %18 = erf(%17) /* ty=Tensor[(1, 128, 3072), float32] */;
    %19 = cast(%18, dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    %20 = multiply(%19, %p31) /* ty=Tensor[(1, 128, 3072), float16] */;
    %21 = add(%p31, %20) /* ty=Tensor[(1, 128, 3072), float16] */;
    %22 = multiply(%15, %21) /* ty=Tensor[(1, 128, 3072), float16] */;
    %23 = broadcast_to(%22, shape=[1, 128, 3072], dtype="float16") /* ty=Tensor[(1, 128, 3072), float16] */;
    reshape(%23, newshape=[-1, 128, 3072]) /* ty=Tensor[(1, 128, 3072), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(3072), float16], float16, float16) -> Tensor[(1, 128, 3072), float16] */;
  %1389 = %1388(%1387, meta[relay.Constant][203] /* ty=Tensor[(3072), float16] */, 0.707031f16 /* ty=float16 */, 0.5f16 /* ty=float16 */) /* ty=Tensor[(1, 128, 3072), float16] */;
  %1390 = fn (%p06: Tensor[(1, 128, 3072), float16] /* ty=Tensor[(1, 128, 3072), float16] */, %p13: Tensor[(1, 3072, 768), float16] /* ty=Tensor[(1, 3072, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    nn.batch_matmul(%p06, %p13, out_dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 3072), float16], Tensor[(1, 3072, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1391 = %1390(%1389, meta[relay.Constant][204] /* ty=Tensor[(1, 3072, 768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1392 = fn (%p05: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p12: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p21: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %10 = reshape(%p05, newshape=[1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */;
    %11 = squeeze(%10, axis=[]) /* ty=Tensor[(1, 128, 768), float16] */;
    %12 = add(%11, %p12) /* ty=Tensor[(1, 128, 768), float16] */;
    add(%p21, %12) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(768), float16], Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1393 = %1392(%1391, meta[relay.Constant][205] /* ty=Tensor[(768), float16] */, %1377) /* ty=Tensor[(1, 128, 768), float16] */;
  %1394 = fn (%p04: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float32] {
    cast(%p04, dtype="float32") /* ty=Tensor[(1, 128, 768), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float16]) -> Tensor[(1, 128, 768), float32] */;
  %1395 = %1394(%1393) /* ty=Tensor[(1, 128, 768), float32] */;
  %1396 = fn (%p03: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    mean(%p03, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1397 = %1396(%1395) /* ty=Tensor[(1, 128, 1), float32] */;
  %1398 = fn (%p0318: Tensor[(1, 128, 768), float32] /* ty=Tensor[(1, 128, 768), float32] */, %p1231: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, Primitive=1) -> Tensor[(1, 128, 1), float32] {
    variance(%p0318, %p1231, axis=[-1], keepdims=True) /* ty=Tensor[(1, 128, 1), float32] */
  } /* ty=fn (Tensor[(1, 128, 768), float32], Tensor[(1, 128, 1), float32]) -> Tensor[(1, 128, 1), float32] */;
  %1399 = %1398(%1395, %1397) /* ty=Tensor[(1, 128, 1), float32] */;
  %1400 = fn (%p02: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p11: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p2: Tensor[(1, 128, 1), float32] /* ty=Tensor[(1, 128, 1), float32] */, %p3: float16 /* ty=float16 */, %p4: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, %p5: Tensor[(768), float16] /* ty=Tensor[(768), float16] */, Primitive=1) -> Tensor[(1, 128, 768), float16] {
    %1 = cast(%p02, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %2 = cast(%p2, dtype="float16") /* ty=Tensor[(1, 128, 1), float16] */;
    %3 = add(%2, %p3) /* ty=Tensor[(1, 128, 1), float16] */;
    %4 = subtract(%p11, %1) /* ty=Tensor[(1, 128, 768), float16] */;
    %5 = sqrt(%3) /* ty=Tensor[(1, 128, 1), float16] */;
    %6 = divide(%4, %5) /* ty=Tensor[(1, 128, 768), float16] */;
    %7 = multiply(%6, %p4) /* ty=Tensor[(1, 128, 768), float16] */;
    %8 = add(%7, %p5) /* ty=Tensor[(1, 128, 768), float16] */;
    %9 = broadcast_to(%8, shape=[1, 128, 768], dtype="float16") /* ty=Tensor[(1, 128, 768), float16] */;
    reshape(%9, newshape=[-1, 128, 768]) /* ty=Tensor[(1, 128, 768), float16] */
  } /* ty=fn (Tensor[(1, 128, 1), float32], Tensor[(1, 128, 768), float16], Tensor[(1, 128, 1), float32], float16, Tensor[(768), float16], Tensor[(768), float16]) -> Tensor[(1, 128, 768), float16] */;
  %1401 = %1400(%1397, %1393, %1399, 1.00136e-05f16 /* ty=float16 */, meta[relay.Constant][206] /* ty=Tensor[(768), float16] */, meta[relay.Constant][207] /* ty=Tensor[(768), float16] */) /* ty=Tensor[(1, 128, 768), float16] */;
  %1402 = fn (%p01: Tensor[(1, 128, 768), float16] /* ty=Tensor[(1, 128, 768), float16] */, %p1: Tensor[(1, 768, 128), float16] /* ty=Tensor[(1, 768, 128), float16] */, Primitive=1) -> Tensor[(1, 128, 128), float16] {
    nn.batch_matmul(%p01, %p1, out_dtype="float16") /* ty=Tensor[(1, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 768), float16], Tensor[(1, 768, 128), float16]) -> Tensor[(1, 128, 128), float16] */;
  %1403 = %1402(%1401, meta[relay.Constant][208] /* ty=Tensor[(1, 768, 128), float16] */) /* ty=Tensor[(1, 128, 128), float16] */;
  %1404 = fn (%p0: Tensor[(1, 128, 128), float16] /* ty=Tensor[(1, 128, 128), float16] */, Primitive=1, relay.reshape_only=1) -> Tensor[(1, 128, 128), float16] {
    %0 = reshape(%p0, newshape=[1, 128, 128]) /* ty=Tensor[(1, 128, 128), float16] */;
    squeeze(%0, axis=[]) /* ty=Tensor[(1, 128, 128), float16] */
  } /* ty=fn (Tensor[(1, 128, 128), float16]) -> Tensor[(1, 128, 128), float16] */;
  %1404(%1403) /* ty=Tensor[(1, 128, 128), float16] */
}


